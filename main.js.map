{"version":3,"file":"main.js","mappings":"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","sources":["webpack://gwarm/./apps/runner/runner-queuer/src/app/queue.ts","webpack://gwarm/./libs/handlers/gmail/gmail-auth-handler/src/auth-handler2.ts","webpack://gwarm/./libs/handlers/gmail/gmail-auth-handler/src/handler/challenge.handler.ts","webpack://gwarm/./libs/handlers/gmail/gmail-auth-handler/src/handler/confirmation-email-wrong.handler.ts","webpack://gwarm/./libs/handlers/gmail/gmail-auth-handler/src/handler/confirmation-email.handler.ts","webpack://gwarm/./libs/handlers/gmail/gmail-auth-handler/src/handler/disabled-account.handler.ts","webpack://gwarm/./libs/handlers/gmail/gmail-auth-handler/src/handler/email-wrong.handler.ts","webpack://gwarm/./libs/handlers/gmail/gmail-auth-handler/src/handler/email.handler.ts","webpack://gwarm/./libs/handlers/gmail/gmail-auth-handler/src/handler/end.handler.ts","webpack://gwarm/./libs/handlers/gmail/gmail-auth-handler/src/handler/handler.enum.ts","webpack://gwarm/./libs/handlers/gmail/gmail-auth-handler/src/handler/index.ts","webpack://gwarm/./libs/handlers/gmail/gmail-auth-handler/src/handler/passowrd-wrong.handler.ts","webpack://gwarm/./libs/handlers/gmail/gmail-auth-handler/src/handler/password.handler.ts","webpack://gwarm/./libs/handlers/gmail/gmail-auth-handler/src/handler/phone.handler.ts","webpack://gwarm/./libs/handlers/gmail/gmail-auth-handler/src/handler/two-step-verification.handler.ts","webpack://gwarm/./libs/handlers/gmail/gmail-auth-handler/src/handler/verification-account.handler.ts","webpack://gwarm/./libs/handlers/gmail/gmail-auth-handler/src/handler/view-chip.handler.ts","webpack://gwarm/./libs/handlers/gmail/gmail-auth-handler/src/index.ts","webpack://gwarm/./libs/handlers/gmail/gmail-auth-handler/src/model/handler.ts","webpack://gwarm/./libs/handlers/gmail/gmail-auth-handler/src/model/index.ts","webpack://gwarm/./libs/handlers/gmail/gmail-auth-handler/src/service/auth.service.ts","webpack://gwarm/./libs/handlers/gmail/gmail-auth-handler/src/service/handler.service.ts","webpack://gwarm/./libs/handlers/gmail/gmail-auth-handler/src/service/index.ts","webpack://gwarm/./libs/handlers/gmail/gmail-auth-handler/src/service/routing.service.ts","webpack://gwarm/./libs/handlers/gmail/gmail-change-name-handler/src/index.ts","webpack://gwarm/./libs/handlers/gmail/gmail-change-name-handler/src/lib/change-name-handler.ts","webpack://gwarm/./libs/handlers/gmail/gmail-remove-devices-handler/src/index.ts","webpack://gwarm/./libs/handlers/gmail/gmail-remove-devices-handler/src/remove-devices-handler.ts","webpack://gwarm/./libs/handlers/gmail/gmail-reply-handler/src/handlers/filter.handler.ts","webpack://gwarm/./libs/handlers/gmail/gmail-reply-handler/src/index.ts","webpack://gwarm/./libs/handlers/gmail/gmail-reply-handler/src/reply-handler.ts","webpack://gwarm/./libs/handlers/gmail/gmail-reply-handler/src/services/message.service.ts","webpack://gwarm/./libs/handlers/gmail/gmail-setup-rule-handler/src/index.ts","webpack://gwarm/./libs/handlers/gmail/gmail-setup-rule-handler/src/setup-rule.handler.ts","webpack://gwarm/./libs/robot/core/src/controllers/auth.controller.ts","webpack://gwarm/./libs/robot/core/src/controllers/change-name.controller.ts","webpack://gwarm/./libs/robot/core/src/controllers/index.ts","webpack://gwarm/./libs/robot/core/src/core/application.ts","webpack://gwarm/./libs/robot/core/src/core/controller.ts","webpack://gwarm/./libs/robot/core/src/core/handler.ts","webpack://gwarm/./libs/robot/core/src/core/index.ts","webpack://gwarm/./libs/robot/core/src/core/isp.ts","webpack://gwarm/./libs/robot/core/src/decorators/index.ts","webpack://gwarm/./libs/robot/core/src/decorators/isp.decorator.ts","webpack://gwarm/./libs/robot/core/src/handlers/add-contact.handler.ts","webpack://gwarm/./libs/robot/core/src/handlers/auth.handler.ts","webpack://gwarm/./libs/robot/core/src/handlers/change-name.handler.ts","webpack://gwarm/./libs/robot/core/src/handlers/index.ts","webpack://gwarm/./libs/robot/core/src/handlers/remove-contact.handler.ts","webpack://gwarm/./libs/robot/core/src/handlers/remove-devices.handler.ts","webpack://gwarm/./libs/robot/core/src/handlers/reply.handler.ts","webpack://gwarm/./libs/robot/core/src/handlers/setup-rule.handler.ts","webpack://gwarm/./libs/robot/core/src/index.ts","webpack://gwarm/./libs/robot/core/src/managers/browser.manager.ts","webpack://gwarm/./libs/robot/core/src/managers/index.ts","webpack://gwarm/./libs/robot/gmail/src/gmail.ts","webpack://gwarm/./libs/robot/gmail/src/handlers.ts","webpack://gwarm/./libs/robot/gmail/src/index.ts","webpack://gwarm/./libs/shared/src/decorators/api-with-token.decorator.ts","webpack://gwarm/./libs/shared/src/decorators/index.ts","webpack://gwarm/./libs/shared/src/index.ts","webpack://gwarm/./libs/shared/src/services/index.ts","webpack://gwarm/./libs/shared/src/services/token.service.ts","webpack://gwarm/./libs/shared/src/shared.module.ts","webpack://gwarm/./libs/shared/src/utils/distributed-random.ts","webpack://gwarm/./libs/shared/src/utils/either.ts","webpack://gwarm/./libs/shared/src/utils/index.ts","webpack://gwarm/./libs/views/shared/src/core/application.ts","webpack://gwarm/./libs/views/shared/src/core/email.ts","webpack://gwarm/./libs/views/shared/src/core/index.ts","webpack://gwarm/./libs/views/shared/src/core/payload.ts","webpack://gwarm/./libs/views/shared/src/core/response.ts","webpack://gwarm/./libs/views/shared/src/core/result.ts","webpack://gwarm/./libs/views/shared/src/core/task.ts","webpack://gwarm/./libs/views/shared/src/enums/index.ts","webpack://gwarm/./libs/views/shared/src/enums/isp.enum.ts","webpack://gwarm/./libs/views/shared/src/enums/task-status.enum.ts","webpack://gwarm/./libs/views/shared/src/enums/task.enum.ts","webpack://gwarm/./libs/views/shared/src/index.ts","webpack://gwarm/./libs/views/shared/src/jobs/add-contact-config.job.ts","webpack://gwarm/./libs/views/shared/src/jobs/add-rule-config.job.ts","webpack://gwarm/./libs/views/shared/src/jobs/auth-config.job.ts","webpack://gwarm/./libs/views/shared/src/jobs/change-name-config.job.ts","webpack://gwarm/./libs/views/shared/src/jobs/index.ts","webpack://gwarm/./libs/views/shared/src/jobs/remove-contact-config.job.ts","webpack://gwarm/./libs/views/shared/src/jobs/remove-devices-config.job.ts","webpack://gwarm/./libs/views/shared/src/jobs/reply-config.job.ts","webpack://gwarm/./libs/views/shared/src/jobs/setup-rule-config.job.ts","webpack://gwarm/./libs/views/shared/src/payloads/add-contact.payload.ts","webpack://gwarm/./libs/views/shared/src/payloads/add-rule.payload.ts","webpack://gwarm/./libs/views/shared/src/payloads/auth.payload.ts","webpack://gwarm/./libs/views/shared/src/payloads/change-name.payload.ts","webpack://gwarm/./libs/views/shared/src/payloads/create-proton.payload.ts","webpack://gwarm/./libs/views/shared/src/payloads/index.ts","webpack://gwarm/./libs/views/shared/src/payloads/remove-contact.payload.ts","webpack://gwarm/./libs/views/shared/src/payloads/remove-devices.payload.ts","webpack://gwarm/./libs/views/shared/src/payloads/reply.payload.ts","webpack://gwarm/./libs/views/shared/src/payloads/reporting.payload.ts","webpack://gwarm/./libs/views/shared/src/payloads/reporting/inbox.payloads.ts","webpack://gwarm/./libs/views/shared/src/payloads/reporting/index.ts","webpack://gwarm/./libs/views/shared/src/payloads/reporting/promotion.payloads.ts","webpack://gwarm/./libs/views/shared/src/payloads/reporting/spam.payloads.ts","webpack://gwarm/./libs/views/shared/src/payloads/setup-rule.payload.ts","webpack://gwarm/./libs/views/shared/src/responses/add-contact.response.ts","webpack://gwarm/./libs/views/shared/src/responses/add-rule.response.ts","webpack://gwarm/./libs/views/shared/src/responses/auth.response.ts","webpack://gwarm/./libs/views/shared/src/responses/change-name.response.ts","webpack://gwarm/./libs/views/shared/src/responses/index.ts","webpack://gwarm/./libs/views/shared/src/responses/remove-contact.response.ts","webpack://gwarm/./libs/views/shared/src/responses/remove-device.response.ts","webpack://gwarm/./libs/views/shared/src/responses/reply.response.ts","webpack://gwarm/./libs/views/shared/src/responses/setup-rule.response.ts","webpack://gwarm/./libs/views/shared/src/results/add-contact.result.ts","webpack://gwarm/./libs/views/shared/src/results/add-rule.result.ts","webpack://gwarm/./libs/views/shared/src/results/auth.result.ts","webpack://gwarm/./libs/views/shared/src/results/change-name.result.ts","webpack://gwarm/./libs/views/shared/src/results/index.ts","webpack://gwarm/./libs/views/shared/src/results/pagination.result.ts","webpack://gwarm/./libs/views/shared/src/results/remove-contact.result.ts","webpack://gwarm/./libs/views/shared/src/results/remove-devices.result.ts","webpack://gwarm/./libs/views/shared/src/results/reply.result.ts","webpack://gwarm/./libs/views/shared/src/results/reporting.result.ts","webpack://gwarm/./libs/views/shared/src/results/setup-rule.result.ts","webpack://gwarm/./libs/views/shared/src/tasks/add-contact.task.ts","webpack://gwarm/./libs/views/shared/src/tasks/add-rule.task.ts","webpack://gwarm/./libs/views/shared/src/tasks/auth.task.ts","webpack://gwarm/./libs/views/shared/src/tasks/change-name.task.ts","webpack://gwarm/./libs/views/shared/src/tasks/index.ts","webpack://gwarm/./libs/views/shared/src/tasks/remove-contact.task.ts","webpack://gwarm/./libs/views/shared/src/tasks/remove-devices.task.ts","webpack://gwarm/./libs/views/shared/src/tasks/reply.task.ts","webpack://gwarm/external commonjs \"@nestjs/common\"","webpack://gwarm/external commonjs \"@nestjs/core\"","webpack://gwarm/external commonjs \"@nestjs/swagger\"","webpack://gwarm/external commonjs \"@rmp135/imgur\"","webpack://gwarm/external commonjs \"async-mutex\"","webpack://gwarm/external commonjs \"bull\"","webpack://gwarm/external commonjs \"class-validator\"","webpack://gwarm/external commonjs \"dotenv\"","webpack://gwarm/external commonjs \"express\"","webpack://gwarm/external commonjs \"playwright-core\"","webpack://gwarm/external commonjs \"redis\"","webpack://gwarm/external commonjs \"tslib\"","webpack://gwarm/external node-commonjs \"crypto\"","webpack://gwarm/external node-commonjs \"fs\"","webpack://gwarm/external node-commonjs \"path\"","webpack://gwarm/external node-commonjs \"util\"","webpack://gwarm/external node-commonjs \"zlib\"","webpack://gwarm/webpack/bootstrap","webpack://gwarm/./apps/runner/runner-queuer/src/main.ts"],"sourcesContent":["import { Application } from '@gwarm/robot/core';\r\nimport { Gmail } from '@gwarm/robot/gmail';\r\nimport Queue = require('bull');\r\nimport redis = require('redis');\r\n\r\n// If you want to pass some \"custom\" Redis config\r\nconst myFirstQueue = new Queue('startQueue', {\r\n  redis: {\r\n    host: 'redis-19392.c8.us-east-1-4.ec2.cloud.redislabs.com',\r\n    port: 19392,\r\n    password: 'xnTmfMv7c3AqrXoKG6ERjuX0jjITmjL8',\r\n  },\r\n});\r\n\r\nconst client = redis.createClient({\r\n  host: 'redis-19392.c8.us-east-1-4.ec2.cloud.redislabs.com',\r\n  port: 19392,\r\n  password: 'xnTmfMv7c3AqrXoKG6ERjuX0jjITmjL8',\r\n});\r\nconst subscriber = client.duplicate();\r\nsubscriber.subscribe('STOP');\r\n\r\nconst concurrrency = process.env.CONCURRENCY || 2;\r\n\r\nconst startApplication = async () => {\r\n  const application = new Application();\r\n  const gmail = new Gmail();\r\n  await application.openBrowser(true);\r\n  application.registerIsp(gmail);\r\n  application.setApplicationId(1);\r\n  myFirstQueue.process(+concurrrency, async (job: Queue.Job, done: any) => {\r\n    await job.progress(1);\r\n    const task = job.data;\r\n    const res = await application.executeTask(task, true);\r\n    done(null, res);\r\n  });\r\n  subscriber.on('message', async (channel, jobId) => {\r\n    if (jobId) await application.stopTasksByJobId(+jobId);\r\n  });\r\n};\r\n\r\nstartApplication();\r\n","import { AuthHandler } from '@gwarm/robot/core';\r\nimport { AuthPayload, AuthResult, Email } from '@gwarm/views/shared';\r\nimport { BrowserContext, Page } from 'playwright-core';\r\nimport {\r\n  ChallengeHandler,\r\n  ConfirmationEmailHandler,\r\n  ConfirmationEmailWrongHandler,\r\n  DisabledAccountHandler,\r\n  EmailHandler,\r\n  EmailWrongHandler,\r\n  EndHandler,\r\n  PasswordHandler,\r\n  PasswordWrongHandler,\r\n  PhoneHandler,\r\n  TwoStepVerificationHandler,\r\n  VerificationAccountHandler,\r\n  ViewChipHandler,\r\n} from './handler';\r\nimport { AuthService, HandlerService, RoutingService } from './service';\r\nexport class GmailAuthHandler extends AuthHandler {\r\n  async handle(\r\n    context: BrowserContext,\r\n    email: Email,\r\n    payload: AuthPayload,\r\n    result: AuthResult\r\n  ): Promise<AuthResult> {\r\n    const page = context.pages()[0];\r\n    const routingService = new RoutingService(page);\r\n    const handlerService = new HandlerService();\r\n    handlerService.signHandler(new EmailHandler(page, email));\r\n    handlerService.signHandler(new EmailWrongHandler(page, email));\r\n    handlerService.signHandler(new PasswordHandler(page, email));\r\n    handlerService.signHandler(new PasswordWrongHandler(page, email));\r\n    handlerService.signHandler(new ChallengeHandler(page, email));\r\n    handlerService.signHandler(new ConfirmationEmailHandler(page, email));\r\n    handlerService.signHandler(new ConfirmationEmailWrongHandler(page, email));\r\n    handlerService.signHandler(new PhoneHandler(page, email));\r\n    handlerService.signHandler(new DisabledAccountHandler(page, email));\r\n    handlerService.signHandler(new EndHandler(page, email));\r\n    handlerService.signHandler(new ViewChipHandler(page, email));\r\n    handlerService.signHandler(new VerificationAccountHandler(page, email));\r\n    handlerService.signHandler(new TwoStepVerificationHandler(page, email));\r\n\r\n    const authService = new AuthService(page, routingService, handlerService);\r\n    const content = await authService.Authenticate(email);\r\n    if (content.isFail) {\r\n      result.error = content.error;\r\n      throw new Error(content.error);\r\n    }\r\n    const token = await authService.getResult(context);\r\n    result.token = token.token;\r\n    result.error = token.error;\r\n    return result;\r\n  }\r\n}\r\n","import { Either, fail, success } from '@gwarm/shared';\r\nimport { Response } from 'playwright-core';\r\nimport { Handler } from '../model';\r\nimport { HandlerEnum } from './handler.enum';\r\n\r\nexport class ChallengeHandler extends Handler {\r\n  name = HandlerEnum.CHALLENGE_HANDLER;\r\n  async handle(): Promise<Either<boolean, string>> {\r\n    const locator = this.page.locator('div[data-challengetype=\"12\"]');\r\n    if ((await locator.count()) == 0) return fail('Email challenge not found');\r\n    const available = await locator\r\n      .nth(0)\r\n      .getAttribute('data-challengeunavailable');\r\n    if (available?.toString() == 'true') {\r\n      return fail('Confirmation by email is temporary unavailable');\r\n    }\r\n    locator.nth(0).click();\r\n    return success(false);\r\n  }\r\n  async waitFor(res: Response): Promise<boolean> {\r\n    const payload = res.request().postData();\r\n    if (payload) {\r\n      return payload.includes(\r\n        '1,\\\\\"accounts.google.com/signin/v2/challenge/selection'\r\n      );\r\n    }\r\n    return false;\r\n  }\r\n  async validate(): Promise<Either<boolean, string>> {\r\n    try {\r\n      const input = await this.page.waitForSelector(\r\n        '[data-challengetype] >> visible=true',\r\n        {\r\n          timeout: 5000,\r\n        }\r\n      );\r\n      if (input) return success(true);\r\n      else return fail('Challenges not Found!');\r\n    } catch (e: any) {\r\n      console.log(e);\r\n      return fail(e.message);\r\n    }\r\n  }\r\n}\r\n","import { Either, fail, success } from '@gwarm/shared';\r\nimport { Response } from 'playwright-core';\r\nimport { Handler } from '../model';\r\nimport { HandlerEnum } from './handler.enum';\r\n\r\nexport class ConfirmationEmailWrongHandler extends Handler {\r\n  name = HandlerEnum.CONFIRMATION_EMAIL_WRONG_HANDLER;\r\n  async handle(): Promise<Either<boolean, string>> {\r\n    console.log('Confirmation Email is wrong');\r\n    return fail('Confirmation Email is wrong');\r\n  }\r\n  async waitFor(res: Response): Promise<boolean> {\r\n    if (res.url().includes('signin/challenge')) {\r\n      const body = (await res.text()).toLowerCase();\r\n      if (\r\n        body.includes(this.email.email.toLowerCase()) &&\r\n        body.includes('INCORRECT_ANSWER_ENTERED'.toLocaleLowerCase()) &&\r\n        body.includes('LOGIN_CHALLENGE'.toLocaleLowerCase())\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  async validate(): Promise<Either<boolean, string>> {\r\n    try {\r\n      const input = await this.page.waitForSelector(\r\n        'input[type=\"email\"] >> visible=true',\r\n        {\r\n          timeout: 5000,\r\n        }\r\n      );\r\n      if (input) return success(true);\r\n      else return fail('Confirmation Input not Found!');\r\n    } catch (e: any) {\r\n      console.log(e);\r\n      return fail(e.message);\r\n    }\r\n  }\r\n}\r\n","import { Either, fail, success } from '@gwarm/shared';\r\nimport { Response } from 'playwright-core';\r\nimport { Handler } from '../model';\r\nimport { HandlerEnum } from './handler.enum';\r\n\r\nexport class ConfirmationEmailHandler extends Handler {\r\n  name = HandlerEnum.CONFIRMATION_EMAIL_HANDLER;\r\n  async handle(): Promise<Either<boolean, string>> {\r\n    const locator = this.page.locator('input[type=\"email\"] >> visible=true');\r\n    if ((await locator.count()) == 0)\r\n      return fail('input Email challenge not found');\r\n    await locator.nth(0).type(this.email.confirmationEmail);\r\n    return success(true);\r\n  }\r\n  async waitFor(res: Response): Promise<boolean> {\r\n    const payload = res.request().postData();\r\n    if (payload) {\r\n      return payload.includes('signin/v2/challenge/kpe');\r\n    }\r\n    return false;\r\n  }\r\n  async validate(): Promise<Either<boolean, string>> {\r\n    try {\r\n      const input = await this.page.waitForSelector(\r\n        'input[type=\"email\"] >> visible=true',\r\n        {\r\n          timeout: 5000,\r\n        }\r\n      );\r\n      if (input) return success(true);\r\n      else return fail('Input not Found!');\r\n    } catch (e: any) {\r\n      console.log(e);\r\n      return fail(e.message);\r\n    }\r\n  }\r\n}\r\n","import { Either, fail, success } from '@gwarm/shared';\r\nimport { Response } from 'playwright-core';\r\nimport { Handler } from '../model';\r\nimport { HandlerEnum } from './handler.enum';\r\n\r\nexport class DisabledAccountHandler extends Handler {\r\n  name = HandlerEnum.DISABLED_ACCOUNT_HANDLER;\r\n  async handle(): Promise<Either<boolean, string>> {\r\n    return fail('Account is disabled');\r\n  }\r\n  async waitFor(res: Response): Promise<boolean> {\r\n    const payload = res.request().postData();\r\n    if (payload) {\r\n      return payload.includes('signin/v2/disabled/explanation');\r\n    }\r\n    return false;\r\n  }\r\n  async validate(): Promise<Either<boolean, string>> {\r\n    try {\r\n      const input = await this.page.waitForSelector(\r\n        '[data-is-secondary-action-disabled=\"false\"] >> visible=true',\r\n        {\r\n          timeout: 5000,\r\n        }\r\n      );\r\n      if (input) return success(true);\r\n      else return fail('Section is not found');\r\n    } catch (e: any) {\r\n      console.log(e);\r\n      return fail(e.message);\r\n    }\r\n  }\r\n}\r\n","import { Either, fail, success } from '@gwarm/shared';\r\nimport { Response } from 'playwright-core';\r\nimport { Handler } from '../model';\r\nimport { HandlerEnum } from './handler.enum';\r\n\r\nexport class EmailWrongHandler extends Handler {\r\n  name = HandlerEnum.EMAIL_WRONG_HANDLER;\r\n  async handle(): Promise<Either<boolean, string>> {\r\n    return fail('Email is wrong');\r\n  }\r\n  async waitFor(res: Response): Promise<boolean> {\r\n    if (res.url().includes('lookup/accountlookup')) {\r\n      const body = await res.text();\r\n      if (!body.toLowerCase().includes(this.email.email.toLowerCase())) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  async validate(): Promise<Either<boolean, string>> {\r\n    try {\r\n      const input = await this.page.waitForSelector('input[type=\"email\"]', {\r\n        timeout: 5000,\r\n      });\r\n      if (input) return success(true);\r\n      else return fail('Email input not found');\r\n    } catch (e: any) {\r\n      return fail(e.message);\r\n    }\r\n  }\r\n}\r\n","import { Either, fail, success } from '@gwarm/shared';\r\nimport { Response } from 'playwright-core';\r\nimport { promisify } from 'util';\r\nimport { Handler } from '../model';\r\nimport { HandlerEnum } from './handler.enum';\r\nconst sleep = promisify(setTimeout);\r\nexport class EmailHandler extends Handler {\r\n  name = HandlerEnum.EMAIL_HANDLER;\r\n  async handle(): Promise<Either<boolean, string>> {\r\n    const locator = await this.page.locator('input[type=\"email\"]');\r\n    if ((await locator.count()) == 0) return fail('Email input not found');\r\n    await locator.nth(0).type(this.email.email);\r\n    return success(true);\r\n  }\r\n  async waitFor(res: Response): Promise<boolean> {\r\n    const payload = res.request().postData();\r\n    if (payload) {\r\n      return payload.includes('accounts.google.com/v3/signin/identifier');\r\n    }\r\n    return false;\r\n  }\r\n\r\n  async validate(): Promise<Either<boolean, string>> {\r\n    try {\r\n      const input = await this.page.waitForSelector('input[type=\"email\"]', {\r\n        timeout: 5000,\r\n      });\r\n      if (input) return success(true);\r\n      else return fail('Email input not found');\r\n    } catch (e: any) {\r\n      return fail(e.message);\r\n    }\r\n  }\r\n}\r\n","import { Either, fail, success } from '@gwarm/shared';\r\nimport { Response } from 'playwright-core';\r\nimport { Handler } from '../model';\r\nimport { HandlerEnum } from './handler.enum';\r\n\r\nexport class EndHandler extends Handler {\r\n  name = HandlerEnum.END;\r\n  async handle(): Promise<Either<boolean, string>> {\r\n    return success(false);\r\n  }\r\n  async waitFor(res: Response): Promise<boolean> {\r\n    return res.url().includes('https://mail.google.com/mail/u/0/');\r\n  }\r\n  async validate(): Promise<Either<boolean, string>> {\r\n    try {\r\n      const input = await this.page.waitForSelector(\r\n        '[data-legacy-last-message-id] >> visible=true',\r\n        {\r\n          timeout: 5000,\r\n        }\r\n      );\r\n      if (input) return success(true);\r\n      else return fail('role=\"tabpanel\"');\r\n    } catch (e: any) {\r\n      console.log(e);\r\n      return fail(e.message);\r\n    }\r\n  }\r\n}\r\n","export enum HandlerEnum {\r\n  EMAIL_HANDLER = 'EMAIL_HANDLER',\r\n  EMAIL_WRONG_HANDLER = 'EMAIL_WRONG_HANDLER',\r\n  PASSWORD_HANDLER = 'PASSWORD_HANDLER',\r\n  PASSWORD_WRONG_HANDLER = 'PASSWORD_WRONG_HANDLER',\r\n  CONFIRMATION_EMAIL_HANDLER = 'CONFIRMATION_EMAIL_HANDLER',\r\n  CONFIRMATION_EMAIL_WRONG_HANDLER = 'CONFIRMATION_EMAIL_WRONG_HANDLER',\r\n  LOGGED_IN_HANDLER = 'LOGGED_IN_HANDLER',\r\n  CHALLENGE_HANDLER = 'CHALLENGE_HANDLER',\r\n  VIEWCHIP_HANDLER = 'VIEWCHIP_HANDLER',\r\n  PHONE_HANDLER = 'PHONE_HANDLER',\r\n  CHANGE_PASSWORD_HANDLER = 'CHANGE_PASSWORD_HANDLER',\r\n  DISABLED_ACCOUNT_HANDLER = 'DISABLED_ACCOUNT_HANDLER',\r\n  TWO_STEP_VERIFICATION_HANDLER = 'TWO_STEP_VERIFICATION_HANDLER',\r\n  VERIFICATION_ACCOUNT_HANDLER = 'VERIFICATION_ACCOUNT_HANDLER',\r\n  END = 'END',\r\n  TIMEOUT = 'TIMEOUT',\r\n}\r\n","import { EmailWrongHandler } from './email-wrong.handler';\r\nimport { EmailHandler } from './email.handler';\r\n\r\nexport * from './handler.enum';\r\nexport * from './email.handler';\r\nexport * from './email-wrong.handler';\r\nexport * from './password.handler';\r\nexport * from './passowrd-wrong.handler';\r\nexport * from './challenge.handler';\r\nexport * from './confirmation-email.handler';\r\nexport * from './confirmation-email-wrong.handler';\r\nexport * from './phone.handler';\r\nexport * from './disabled-account.handler';\r\nexport * from './end.handler';\r\nexport * from './view-chip.handler';\r\nexport * from './verification-account.handler';\r\nexport * from './two-step-verification.handler';\r\nexport const HANDLERS = [EmailHandler, EmailWrongHandler];\r\n","import { Either, fail, success } from '@gwarm/shared';\r\nimport { Response } from 'playwright-core';\r\nimport { Handler } from '../model';\r\nimport { HandlerEnum } from './handler.enum';\r\n\r\nexport class PasswordWrongHandler extends Handler {\r\n  name = HandlerEnum.PASSWORD_WRONG_HANDLER;\r\n\r\n  async handle(): Promise<Either<boolean, string>> {\r\n    return fail('Password is wrong');\r\n  }\r\n  async waitFor(res: Response): Promise<boolean> {\r\n    if (res.url().includes('pwd')) {\r\n      const body = await res.text();\r\n      if (\r\n        body.toLowerCase().includes('INCORRECT_ANSWER_ENTERED'.toLowerCase()) &&\r\n        body.toLowerCase().includes('FIRST_AUTH_FACTOR'.toLowerCase())\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  async validate(): Promise<Either<boolean, string>> {\r\n    try {\r\n      const input = await this.page.waitForSelector(\r\n        'input[type=\"password\"] >> visible=true',\r\n        {\r\n          timeout: 5000,\r\n        }\r\n      );\r\n      if (input) return success(true);\r\n      else return fail('password input not found');\r\n    } catch (e: any) {\r\n      return fail(e.message);\r\n    }\r\n  }\r\n}\r\n","import { Either, fail, success } from '@gwarm/shared';\r\nimport { Response } from 'playwright-core';\r\nimport { Handler } from '../model';\r\nimport { HandlerEnum } from './handler.enum';\r\n\r\nexport class PasswordHandler extends Handler {\r\n  name = HandlerEnum.PASSWORD_HANDLER;\r\n\r\n  async handle(): Promise<Either<boolean, string>> {\r\n    const locator = this.page.locator('input[type=\"password\"]');\r\n    if ((await locator.count()) == 0) return fail('password input not found');\r\n    await this.page.waitForTimeout(1000);\r\n    await locator.nth(0).type(this.email.password);\r\n    return success(true);\r\n  }\r\n  async waitFor(res: Response): Promise<boolean> {\r\n    if (res.url().includes('pwd')) {\r\n      const body = await res.text();\r\n      if (\r\n        body.toLowerCase().includes('INITIALIZED'.toLowerCase()) &&\r\n        body.toLowerCase().includes('FIRST_AUTH_FACTOR'.toLowerCase())\r\n      ) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  async validate(): Promise<Either<boolean, string>> {\r\n    try {\r\n      const input = await this.page.waitForSelector(\r\n        'input[type=\"password\"] >> visible=true',\r\n        {\r\n          timeout: 5000,\r\n        }\r\n      );\r\n      if (input) return success(true);\r\n      else return fail('password input not found');\r\n    } catch (e: any) {\r\n      return fail(e.message);\r\n    }\r\n  }\r\n}\r\n","import { Either, fail, success } from '@gwarm/shared';\r\nimport { Response } from 'playwright-core';\r\nimport { Handler } from '../model';\r\nimport { HandlerEnum } from './handler.enum';\r\n\r\nexport class PhoneHandler extends Handler {\r\n  name = HandlerEnum.PHONE_HANDLER;\r\n\r\n  async handle(): Promise<Either<boolean, string>> {\r\n    return fail('Phone number is required');\r\n  }\r\n  async waitFor(res: Response): Promise<boolean> {\r\n    if (res.url().includes('challenge') && !res.url().includes('password')) {\r\n      const value = await res.headerValue('google-accounts-signin');\r\n      const body = await res.text();\r\n      if (\r\n        !value &&\r\n        body.includes('speedbump/idvreenable') &&\r\n        !body\r\n          .toLocaleLowerCase()\r\n          .includes(this.email.email.toLocaleLowerCase()) &&\r\n        !body\r\n          .toLocaleLowerCase()\r\n          .includes('LOGIN_CHALLENGE'.toLocaleLowerCase()) &&\r\n        !body\r\n          .toLocaleLowerCase()\r\n          .includes('INCORRECT_ANSWER_ENTERED'.toLocaleLowerCase())\r\n      )\r\n        return true;\r\n    }\r\n    return false;\r\n  }\r\n  async validate(): Promise<Either<boolean, string>> {\r\n    try {\r\n      const input = await this.page.waitForSelector(\r\n        'input[name=\"deviceAddress\"] >> visible=true',\r\n        {\r\n          timeout: 5000,\r\n        }\r\n      );\r\n      if (input) return success(true);\r\n      else return fail('input not found');\r\n    } catch (e: any) {\r\n      return fail(e.message);\r\n    }\r\n  }\r\n}\r\n","import { Either, fail, success } from '@gwarm/shared';\r\nimport { Response } from 'playwright-core';\r\nimport { Handler } from '../model';\r\nimport { HandlerEnum } from './handler.enum';\r\n\r\nexport class TwoStepVerificationHandler extends Handler {\r\n  name = HandlerEnum.TWO_STEP_VERIFICATION_HANDLER;\r\n  async handle(): Promise<Either<boolean, string>> {\r\n    return fail('Account needs 2 steps verification');\r\n  }\r\n  async waitFor(res: Response): Promise<boolean> {\r\n    const payload = res.request().postData();\r\n    if (payload) {\r\n      return payload.includes('signin/v2/challenge/ipp');\r\n    }\r\n    return false;\r\n  }\r\n  async validate(): Promise<Either<boolean, string>> {\r\n    try {\r\n      const input = await this.page.waitForSelector(\r\n        '[data-is-secondary-action-disabled=\"false\"] >> visible=true',\r\n        {\r\n          timeout: 5000,\r\n        }\r\n      );\r\n      if (input) return success(true);\r\n      else return fail('Section is not found');\r\n    } catch (e: any) {\r\n      console.log(e);\r\n      return fail(e.message);\r\n    }\r\n  }\r\n}\r\n","import { Either, fail, success } from '@gwarm/shared';\r\nimport { Response } from 'playwright-core';\r\nimport { Handler } from '../model';\r\nimport { HandlerEnum } from './handler.enum';\r\n\r\nexport class VerificationAccountHandler extends Handler {\r\n  name = HandlerEnum.VERIFICATION_ACCOUNT_HANDLER;\r\n  async handle(): Promise<Either<boolean, string>> {\r\n    return fail('Account needs verification');\r\n  }\r\n  async waitFor(res: Response): Promise<boolean> {\r\n    if (res.url().includes('source-path=%2Fv3%2Fsignin%2Frejected')) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  async validate(): Promise<Either<boolean, string>> {\r\n    try {\r\n      const input = await this.page.waitForSelector(\r\n        '[data-is-secondary-action-disabled=\"false\"] >> visible=true',\r\n        {\r\n          timeout: 5000,\r\n        }\r\n      );\r\n      if (input) return success(true);\r\n      else return fail('Section is not found');\r\n    } catch (e: any) {\r\n      console.log(e);\r\n      return fail(e.message);\r\n    }\r\n  }\r\n}\r\n","import { Either, fail, success } from '@gwarm/shared';\r\nimport { Response } from 'playwright-core';\r\nimport { Handler } from '../model';\r\nimport { HandlerEnum } from './handler.enum';\r\n\r\nexport class ViewChipHandler extends Handler {\r\n  name = HandlerEnum.VIEWCHIP_HANDLER;\r\n  async handle(): Promise<Either<boolean, string>> {\r\n    const locator = this.page.locator(\r\n      'div > div > div:nth-child(4) > div:nth-child(1) > button'\r\n    );\r\n    if ((await locator.count()) == 0) return fail('Button not found');\r\n    locator.click();\r\n    return success(false);\r\n  }\r\n  async waitFor(res: Response): Promise<boolean> {\r\n    if (res.url().includes('&source-path=%2Fweb%2Fchip&')) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  async validate(): Promise<Either<boolean, string>> {\r\n    try {\r\n      const input = await this.page.waitForSelector(\r\n        'div > div > div:nth-child(4) > div:nth-child(1) > button',\r\n        {\r\n          timeout: 5000,\r\n        }\r\n      );\r\n      if (input) return success(true);\r\n      else return fail('Button not Found!');\r\n    } catch (e: any) {\r\n      console.log(e);\r\n      return fail(e.message);\r\n    }\r\n  }\r\n}\r\n","export * from './auth-handler2';\r\n","import { Either } from '@gwarm/shared';\r\nimport { Email } from '@gwarm/views/shared';\r\nimport { Page, Response } from 'playwright-core';\r\nimport { HandlerEnum } from '../handler';\r\nexport abstract class Handler {\r\n  abstract name: HandlerEnum;\r\n  constructor(protected readonly page: Page, protected readonly email: Email) {}\r\n  abstract handle(): Promise<Either<boolean, string>>;\r\n  abstract waitFor(res: Response): Promise<boolean>;\r\n  abstract validate(): Promise<Either<boolean, string>>;\r\n}\r\n","export * from './handler';\r\n","import { BrowserContext, Page } from 'playwright-core';\r\nimport { HandlerService } from './handler.service';\r\nimport { RoutingService } from './routing.service';\r\nimport { AuthResult, Email } from '@gwarm/views/shared';\r\nimport { HandlerEnum } from '../handler';\r\nimport { Either, fail, success } from '@gwarm/shared';\r\nimport { deflateSync } from 'zlib';\r\nimport { promisify } from 'util';\r\nconst sleep = promisify(setTimeout);\r\n\r\nexport class AuthService {\r\n  constructor(\r\n    private readonly page: Page,\r\n    private readonly RoutingService: RoutingService,\r\n    private readonly handlerService: HandlerService\r\n  ) {}\r\n\r\n  async Authenticate(email: Email): Promise<Either<string, string>> {\r\n    await this.page.goto(\r\n      'https://accounts.google.com/AccountChooser/signinchooser?service=mail&continue=https%3A%2F%2Fmail.google.com%2Fmail%2F&flowName=GlifWebSignIn&flowEntry=AccountChooser&hl=en',\r\n      {\r\n        waitUntil: 'commit',\r\n      }\r\n    );\r\n    const loop = true;\r\n    while (loop) {\r\n      console.log('Next Loop!');\r\n      const HANDLER_NAME_RESULT = await this.RoutingService.waitForNextHandler(\r\n        this.handlerService.getHandlers()\r\n      );\r\n      if (HANDLER_NAME_RESULT.isFail) {\r\n        return fail('Error : No Handler is created Yet');\r\n      }\r\n\r\n      const HANDLER_NAME = HANDLER_NAME_RESULT.value;\r\n      console.log('Handler :', HANDLER_NAME);\r\n      if (HANDLER_NAME === HandlerEnum.END) {\r\n        return success('Authenticated successfully');\r\n      } else if (HANDLER_NAME === HandlerEnum.TIMEOUT) {\r\n        return fail('Timeout');\r\n      } else {\r\n        const handler = this.handlerService.getHandler(HANDLER_NAME);\r\n        if (handler.isFail) return fail(handler.error);\r\n        else {\r\n          const validationResult = await handler.value.validate();\r\n          if (validationResult.isFail)\r\n            return fail(`Handler ${HANDLER_NAME} is Wrong`);\r\n          const result = await handler.value.handle();\r\n          if (result.isFail) return fail(result.error);\r\n          if (result.value) {\r\n            const resultNext = await this.clickNext();\r\n            if (resultNext.isFail) return success('Authenticated successfully');\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return success('Authenticated successfully');\r\n  }\r\n\r\n  async clickNext(): Promise<Either<string, string>> {\r\n    const locator = this.page.locator('text=Next');\r\n    if ((await locator.count()) == 0) return fail('Next button not found');\r\n    locator.nth(0).click();\r\n    return success('Clicked next');\r\n  }\r\n  async getResult(context: BrowserContext): Promise<AuthResult> {\r\n    const result = new AuthResult();\r\n    const deflated = deflateSync(\r\n      JSON.stringify(JSON.stringify(await context.storageState()))\r\n    ).toString('base64');\r\n    result.token = deflated;\r\n    return result;\r\n  }\r\n}\r\n","import { fail, success, Either } from '@gwarm/shared';\r\nimport { HandlerEnum } from '../handler';\r\nimport { Handler } from '../model';\r\nexport class HandlerService {\r\n  private readonly handlers = new Map<HandlerEnum, Handler>();\r\n  signHandler(handler: Handler) {\r\n    this.handlers.set(handler.name, handler);\r\n  }\r\n  getHandler(target: HandlerEnum): Either<Handler, string> {\r\n    const handler = this.handlers.get(target);\r\n    if (handler) return success(handler);\r\n    else return fail('handler not found');\r\n  }\r\n  getHandlers() {\r\n    return this.handlers;\r\n  }\r\n}\r\n","export * from './auth.service';\r\nexport * from './handler.service';\r\nexport * from './routing.service';\r\n","import { Page, Response } from 'playwright-core';\r\nimport { Handler } from '../model';\r\nimport { HandlerEnum } from '../handler';\r\nimport { Either, success, fail } from '@gwarm/shared';\r\nexport class RoutingService {\r\n  constructor(private readonly page: Page) {}\r\n  private passedHandlers: Handler[] = [];\r\n\r\n  async waitForNextHandler(\r\n    handlers: Map<HandlerEnum, Handler>\r\n  ): Promise<Either<HandlerEnum, string>> {\r\n    const promotedHandlers: Handler[] = [];\r\n    let response: Response;\r\n    try {\r\n      response = await this.page.waitForResponse(\r\n        async (res) => {\r\n          for (const handler of handlers) {\r\n            if (\r\n              (await handler[1].waitFor(res)) &&\r\n              !this.passedHandlers.includes(handler[1])\r\n            ) {\r\n              this.passedHandlers.push(handler[1]);\r\n              return true;\r\n            }\r\n          }\r\n          return false;\r\n        },\r\n        {\r\n          timeout: 15000,\r\n        }\r\n      );\r\n    } catch (e) {\r\n      return fail('Timeout waiting for next handler');\r\n    }\r\n    for (const handler of handlers) {\r\n      if (await handler[1].waitFor(response)) {\r\n        return success(handler[0]);\r\n      }\r\n    }\r\n    return success(HandlerEnum.TIMEOUT);\r\n  }\r\n}\r\n","export * from './lib/change-name-handler';\r\n","import { ChangeNameHandler } from '@gwarm/robot/core';\r\nimport {\r\n  ChangeNamePayload,\r\n  ChangeNameResult,\r\n  Email,\r\n  TaskEnum,\r\n} from '@gwarm/views/shared';\r\nimport { BrowserContext, Page } from 'playwright-core';\r\nexport class GmailChangeNameHandler extends ChangeNameHandler {\r\n  public name = TaskEnum.CHANGE_NAME;\r\n  async handle(\r\n    context: BrowserContext,\r\n    email: Email,\r\n    payload: ChangeNamePayload,\r\n    result: ChangeNameResult\r\n  ): Promise<ChangeNameResult> {\r\n    const page = context.pages()[0];\r\n    console.log('[CHANGE_NAME] start');\r\n    await page.goto(\r\n      'https://mail.google.com/mail/u/0/?tab=rm&ogbl#settings/accounts', { timeout: 100000 }\r\n    );\r\n    await page.waitForNavigation({ timeout: 100000 });\r\n    console.log('[CHANGE_NAME] go to accounts');\r\n    await this.waitForReady(page);\r\n    const oldName = await this.getCurrentName(page);\r\n    console.time('[CHANGE_NAME] Delete Old Alias');\r\n    await this.deleteOldAlias(page);\r\n    console.timeEnd('[CHANGE_NAME] Delete Old Alias');\r\n    await page.waitForTimeout(2000);\r\n    console.time('[CHANGE_NAME] Add New Alias');\r\n    await this.addNewAlias(context, email, payload);\r\n    console.timeEnd('[CHANGE_NAME] Add New Alias');\r\n    await page.waitForTimeout(2000);\r\n    console.time('[CHANGE_NAME] Make Last As Default');\r\n    await this.makeLastAsDefault(page);\r\n    console.timeEnd('[CHANGE_NAME] Make Last As Default');\r\n    const newName = await this.getCurrentName(page);\r\n    result.name = newName;\r\n    result.oldName = oldName;\r\n    return result;\r\n  }\r\n\r\n  async addNewAlias(\r\n    context: BrowserContext,\r\n    email: Email,\r\n    payload: ChangeNamePayload\r\n  ) {\r\n    const page = context.pages()[0];\r\n    const locators = page.locator(\r\n      'tr > td > span[role=\"link\"][idlink][tabindex=\"0\"]'\r\n    );\r\n    await locators.nth(0).click();\r\n    console.log(\"click 'add new alias'\");\r\n    await page.waitForTimeout(2000);\r\n    console.log(context.pages().length);\r\n    const newpage = context.pages().pop();\r\n    if (!newpage) throw new Error(\"can't access add alias page\");\r\n    await page.waitForTimeout(2000);\r\n    const inputName = newpage.locator('#cfn');\r\n    await inputName.nth(0).click({ clickCount: 3 });\r\n    await inputName.nth(0).type(payload.name);\r\n    const inputEmail = newpage.locator('#focus');\r\n    const alias = this.createNewAliasEmail(email, payload);\r\n    await inputEmail.nth(0).type(alias);\r\n    await newpage.click('input[type=\"submit\"] >> visible=true');\r\n  }\r\n\r\n  createNewAliasEmail(\r\n    { email }: Email,\r\n    { withPlus, extension, numberOfPoints }: ChangeNamePayload\r\n  ) {\r\n    let username = email.split('@')[0].split('.').join('');\r\n    const domaine = email.split('@')[1];\r\n    const chunks = username.split('');\r\n    for (let i = 0; i < numberOfPoints; i++) {\r\n      let randomIndex = Math.floor(Math.random() * (chunks.length - 1)) + 1;\r\n      while (\r\n        chunks[randomIndex - 1] === '.' ||\r\n        chunks[randomIndex + 1] === '.' ||\r\n        chunks[randomIndex] === '.'\r\n      ) {\r\n        randomIndex = Math.floor(Math.random() * (chunks.length - 1)) + 1;\r\n      }\r\n      chunks.splice(randomIndex, 0, '.');\r\n    }\r\n    let newusername = chunks.join('');\r\n    if (withPlus) {\r\n      newusername += '+' + extension;\r\n    }\r\n    return newusername + '@' + domaine;\r\n  }\r\n  async deleteOldAlias(page: Page) {\r\n    let locators = page.locator(\r\n      'tbody > tr:nth-child(2) > td:nth-child(4) > span'\r\n    );\r\n    console.log('old alias locators :', await locators.count());\r\n    while ((await locators.count()) > 0) {\r\n      await locators.nth(0).click();\r\n      await page.waitForTimeout(2000);\r\n      await page.locator('button[name=\"ok\"]').nth(0).click();\r\n      await page.waitForTimeout(1500);\r\n      locators = page.locator('tbody > tr:nth-child(2) > td:nth-child(4)');\r\n    }\r\n  }\r\n  async makeLastAsDefault(page: Page) {\r\n    const locator = await page.locator(\r\n      'tbody > tr:nth-child(2) > td:nth-child(2) > span[role]'\r\n    );\r\n    if ((await locator.count()) == 0) {\r\n      console.log(\"can't find last alias\");\r\n      return;\r\n    }\r\n    await locator.nth(0).click();\r\n    await page.waitForTimeout(2000);\r\n  }\r\n  async waitForReady(page: Page) {\r\n    await page.waitForSelector('table > tbody input', { timeout: 100000 });\r\n    console.log('browser is ready');\r\n  }\r\n\r\n  async getCurrentName(page: Page): Promise<string> {\r\n    const locator = page.locator(\r\n      'tbody>tr:nth-child(4)>td:nth-child(2)>table:nth-child(1)>tbody>tr',\r\n      {\r\n        has: page.locator('td:nth-child(4)'),\r\n      }\r\n    );\r\n    const count = await locator.count();\r\n    switch (count) {\r\n      case 0:\r\n        throw new Error(\"can't find current name\");\r\n      case 1:\r\n        return await locator.locator('td:first-child').nth(0).innerText();\r\n      default:\r\n        return await page\r\n          .locator(\r\n            'tbody>tr:nth-child(4)>td:nth-child(2)>table:nth-child(1)>tbody>tr',\r\n            {\r\n              has: page.locator('td:nth-child(2)>span:not([role])'),\r\n            }\r\n          )\r\n          .locator('td:first-child')\r\n          .nth(0)\r\n          .innerText();\r\n    }\r\n  }\r\n}\r\n","export * from './remove-devices-handler';\r\n","import { RemoveDeviceHandler } from '@gwarm/robot/core';\r\nimport { Email, Payload, Result, TaskEnum } from '@gwarm/views/shared';\r\nimport { BrowserContext, Page } from 'playwright-core';\r\nimport { promisify } from 'util';\r\nconst sleep = promisify(setTimeout);\r\nexport class GmailRemoveDevicesHandler extends RemoveDeviceHandler {\r\n  name = TaskEnum.REMOVE_DEVICES;\r\n  async handle(\r\n    context: BrowserContext,\r\n    email: Email,\r\n    payload: Payload\r\n  ): Promise<Result> {\r\n    const page = context.pages()[0];\r\n    await page.goto('https://myaccount.google.com/device-activity/?hl=en');\r\n    const locators = await page.locator(\r\n      'div > div:nth-child(1) > div:nth-child(1) > div:nth-child(1) > ul:nth-child(1) > li a'\r\n    );\r\n    const ids = [];\r\n    const count = await locators.count();\r\n    for (let i = 1; i < count; i++) {\r\n      const id = await locators.nth(i).getAttribute('data-device-id');\r\n      ids.push(id);\r\n    }\r\n\r\n    for (const id of ids) {\r\n      if (id) await this.removeDevice(page, id);\r\n    }\r\n    return {};\r\n  }\r\n\r\n  async removeDevice(page: Page, id: string) {\r\n    await page.goto(\r\n      `https://myaccount.google.com/device-activity/id/${id}?hl=en`\r\n    );\r\n    const locator = page.locator('span:has-text(\"Sign\") >> visible');\r\n    console.log(await locator.count());\r\n    if ((await locator.count()) > 0) {\r\n      await locator.nth(1).click();\r\n      await sleep(1500);\r\n      const confirmlocator = page.locator('button:has-text(\"Sign\") >> visible');\r\n      if ((await confirmlocator.count()) > 0) {\r\n        await confirmlocator.nth(1).click();\r\n      }\r\n    }\r\n    await sleep(1000);\r\n  }\r\n}\r\n","import { Page } from 'playwright-core';\r\n\r\nexport class FilterHandler {\r\n  constructor(private readonly page: Page) { }\r\n\r\n  async filter(filter: string): Promise<void> {\r\n    console.log('hello');\r\n    await this.page.goto(\r\n      `https://mail.google.com/mail/u/0/#search/${filter}?hl=en`\r\n    );\r\n    await this.page.waitForNavigation({ timeout: 100000 });\r\n  }\r\n}\r\n","export * from './reply-handler';\r\n","import { ReplyHandler } from '@gwarm/robot/core';\r\nimport { ReplyPayload, ReplyResult, Email } from '@gwarm/views/shared';\r\nimport { BrowserContext } from 'playwright-core';\r\nimport { FilterHandler } from './handlers/filter.handler';\r\nimport { MessageService } from './services/message.service';\r\nexport class GmailReplyHandler extends ReplyHandler {\r\n  async handle(\r\n    context: BrowserContext,\r\n    email: Email,\r\n    payload: ReplyPayload,\r\n    res: ReplyResult\r\n  ): Promise<ReplyResult> {\r\n    const messageIds: string[] = [];\r\n    res.count = 0;\r\n    res.limited = false;\r\n    res.blocked = false;\r\n    res.bounce = 0;\r\n    console.log('start reply');\r\n    const page = context.pages()[0];\r\n    const messageService = new MessageService(page);\r\n    const filterHandler = new FilterHandler(page);\r\n    console.log(res.count >= payload.limit);\r\n    while (res.count < payload.limit) {\r\n      await filterHandler.filter(payload.filter);\r\n      await page.waitForNavigation({ timeout: 100000 });\r\n      const messages = await messageService.getMessages();\r\n      console.log(messages)\r\n      if (messages.isFail) {\r\n        throw new Error(\"Couldn't get messages\");\r\n      }\r\n      if (messages.value.messages.filter((elt) => !messageIds.includes(elt.id)).length === 0) break;\r\n      for (const message of messages.value.messages) {\r\n        if (res.count >= payload.limit) break;\r\n        if (!messageIds.includes(message.id)) {\r\n          const opened = await messageService.openMessage(message);\r\n          if (!opened.isFail) {\r\n            await messageService.openReplyBox();\r\n            if (payload.reset) {\r\n              await messageService.resetReplyBox();\r\n            }\r\n            const response = await messageService.SendMessage(payload.body);\r\n            if (!response.isFail) {\r\n              messageIds.push(message.id)\r\n              res.count++;\r\n              console.log('message sent');\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return res;\r\n  }\r\n}\r\n","import { Either, fail, success } from '@gwarm/shared';\r\nimport { Page } from 'playwright-core';\r\nimport { Message } from '../models';\r\nimport { MessagePage } from '../models/page.model';\r\n\r\nexport class MessageService {\r\n  constructor(private readonly page: Page) { }\r\n  async getMessages(date = -1): Promise<Either<MessagePage, string>> {\r\n    console.time('new function');\r\n    const messages = await this.page.evaluate((date) => {\r\n      const messages: Message[] = [];\r\n      const trs = document.querySelectorAll('tr[role=\"row\"]');\r\n      for (let i = 0; i < trs.length; i++) {\r\n        const tr = trs.item(i);\r\n        const box = tr.getBoundingClientRect();\r\n        if (box.width === 0 || box.height === 0) continue;\r\n        const fromContainer = tr.querySelector('span[email][name]');\r\n        const subjectContainer = tr.querySelector('span[data-thread-id]');\r\n        const dateContainer = tr.querySelector('span[title]');\r\n        const tooltipsContainer = tr.querySelectorAll(\r\n          'span[role=\"button\"][data-tooltip]'\r\n        );\r\n\r\n        const classes = tr.getAttribute('class');\r\n        const message = {\r\n          from: fromContainer?.textContent ?? '',\r\n          email: fromContainer?.getAttribute('email') ?? '',\r\n          subject: subjectContainer?.textContent ?? '',\r\n          dataThreadId: subjectContainer?.getAttribute('data-thread-id') ?? '',\r\n          date: Date.parse(dateContainer?.getAttribute('title') ?? ''),\r\n          id:\r\n            subjectContainer?.getAttribute('data-legacy-last-message-id') ?? '',\r\n          isRead: !classes?.includes('zE') ?? false,\r\n          isStarred: false,\r\n          isImportant: false,\r\n        };\r\n\r\n        for (let i = 0; i < tooltipsContainer.length; i++) {\r\n          const tooltip = tooltipsContainer.item(i);\r\n          const tooltipText = tooltip.getAttribute('aria-label');\r\n          switch (tooltipText?.trim()) {\r\n            case 'Not starred':\r\n              message.isStarred = false;\r\n              break;\r\n            case 'Starred':\r\n              message.isStarred = true;\r\n              break;\r\n            case 'Not important':\r\n              message.isImportant = false;\r\n              break;\r\n            case 'Important':\r\n              message.isImportant = true;\r\n              break;\r\n          }\r\n        }\r\n        messages.push(message);\r\n      }\r\n      if (messages.length === 0)\r\n        return Promise.resolve({\r\n          messages: messages,\r\n          hasNext: false,\r\n        });\r\n      const nextContainer = document.querySelectorAll(\r\n        'div[aria-label=\"Older\"]'\r\n      );\r\n      let hasNext = !(\r\n        nextContainer\r\n          ?.item(nextContainer.length - 1)\r\n          .getAttribute('aria-disabled')\r\n          ?.toString() === 'true'\r\n      );\r\n      if (\r\n        hasNext &&\r\n        messages.length > 0 &&\r\n        messages[messages.length - 1].date < date\r\n      ) {\r\n        hasNext = false;\r\n      }\r\n\r\n      return Promise.resolve({\r\n        messages: messages,\r\n        hasNext: hasNext,\r\n      });\r\n    }, date);\r\n    console.timeEnd('new function');\r\n    console.log(messages.hasNext, messages.messages.length);\r\n    return success(messages as any);\r\n  }\r\n\r\n  async openMessage(message: Message) {\r\n    try {\r\n      console.log('[REPLY] OPEN MESSAGE');\r\n      const url = this.page.url();\r\n      await this.page.goto(url + '/' + message.id);\r\n      console.log(message.id)\r\n      await this.page.waitForSelector(\r\n        'tbody > tr:nth-child(1) > td:nth-child(4)> div:nth-child(1)[role=\"button\"]');\r\n      console.log('[REPLY] OPEN MESSAGE DONE');\r\n      return success(true)\r\n    } catch (error) {\r\n      return fail(false)\r\n    }\r\n  }\r\n\r\n  async openReplyBox() {\r\n    console.log('[REPLY] OPEN REPLY BOX');\r\n    const locator = this.page.locator(\r\n      'tbody > tr:nth-child(1) > td:nth-child(4)> div:nth-child(1)[role=\"button\"]'\r\n    );\r\n    const count = await locator.count();\r\n    if (count > 0) {\r\n      await locator.nth(0).click();\r\n    } else {\r\n      throw new Error('[REPLY] Failed to find reply button');\r\n    }\r\n    await this.page.waitForSelector('div[data-tooltip=\"Show trimmed content\"]');\r\n    await this.page.waitForTimeout(2000);\r\n  }\r\n\r\n  async SendMessage(message: string): Promise<Either<boolean, string>> {\r\n    console.log('[REPLY] WRITE MESSAGE');\r\n    const done = await this.page.evaluate((msg) => {\r\n      const context = document.querySelector('div[aria-label=\"Message Body\"]');\r\n      if (context) {\r\n        context.innerHTML = msg;\r\n        return true;\r\n      }\r\n      return false;\r\n    }, message);\r\n    if (!done) return fail('[REPLY] Failed to write message');\r\n    await this.page.waitForTimeout(2000);\r\n    console.log('[REPLY] SEND MESSAGE');\r\n    await this.page.keyboard.down('Control');\r\n    await this.page.keyboard.press('Enter');\r\n    await this.page.keyboard.up('Control');\r\n    await this.page.waitForSelector('text=Message sent');\r\n    return success(true);\r\n  }\r\n\r\n  async resetReplyBox() {\r\n    console.log('[REPLY] RESET REPLY BOX');\r\n    const locator = this.page.locator(\r\n      'div[data-tooltip=\"Show trimmed content\"]'\r\n    );\r\n    const count = await locator.count();\r\n    if (count > 0) {\r\n      await locator.nth(0).click();\r\n    } else {\r\n      throw new Error('[REPLY] Failed to find reset button');\r\n    }\r\n    await this.page.waitForTimeout(1000);\r\n    console.log('[REPLY] REMOVE PREVIOUS MESSAGE');\r\n    await this.page.keyboard.down('Control');\r\n    await this.page.keyboard.press('A');\r\n    await this.page.keyboard.up('Control');\r\n    await this.page.keyboard.press('Backspace');\r\n    console.log('[REPLY] RESET REPLY BOX DONE');\r\n  }\r\n}\r\n","export * from './setup-rule.handler';\r\n","import { SetupRuleHandler } from '@gwarm/robot/core';\r\nimport { Email, SetupRulePayload, SetupRuleResult } from '@gwarm/views/shared';\r\nimport { BrowserContext, Page } from 'playwright-core';\r\n\r\nexport class GmailSetupRuleHandler extends SetupRuleHandler {\r\n  async handle(\r\n    context: BrowserContext,\r\n    email: Email,\r\n    payload: SetupRulePayload,\r\n    result: SetupRuleResult\r\n  ): Promise<SetupRuleResult> {\r\n    const page = context.pages()[0];\r\n    console.log('start');\r\n    await page.goto(\r\n      'https://mail.google.com/mail/u/0/?tab=rm&hl=en&ogbl#settings/filters'\r\n    );\r\n    await this.addInboxRule(page);\r\n    await this.addIgnoreRule(page);\r\n    return result;\r\n  }\r\n  async addInboxRule(page: Page) {\r\n    console.log('[SETUP RULE] OPEN SEARCH BOX');\r\n    const locator = page.locator(\r\n      'tr[role=\"listitem\"] > td:first-child> span:first-child[role=\"link\"][idlink]'\r\n    );\r\n    await locator.nth(0).click();\r\n    await page.waitForTimeout(2000);\r\n    console.log('[SETUP RULE] MARK 1 Byte as A Filter');\r\n    await page.type(\r\n      'div > div:first-child > div:nth-child(2)>div:nth-child(6)>div:nth-child(3)>input',\r\n      '1'\r\n    );\r\n    await page.click(\r\n      'div > div:first-child > div:nth-child(2)>div:nth-child(6)>div:nth-child(4) div[role=\"listbox\"]'\r\n    );\r\n    await page.click(\r\n      'div > div:first-child > div:nth-child(2)>div:nth-child(6)>div:nth-child(4) div[role=\"listbox\"] > div[role=\"option\"]:nth-child(3)'\r\n    );\r\n    await page.waitForTimeout(700);\r\n    console.log('[SETUP RULE] CLICK CREATE FILTER');\r\n    await page.click(\r\n      'div > div:first-child > div:nth-child(2)>div:nth-child(8)>div:nth-child(2)'\r\n    );\r\n    await page.waitForTimeout(500);\r\n    console.log('[SETUP RULE] CHECK MOVE TO INBOX');\r\n    await page.click(\r\n      'div > div:first-child > div:nth-child(2)>div:nth-child(3)> div:first-child > div:nth-child(7)> label'\r\n    );\r\n    console.log('[SETUP RULE] CHECK MOVE TO PRIMARY');\r\n    await page.click(\r\n      'div > div:first-child > div:nth-child(2)>div:nth-child(3)> div:first-child > div:nth-child(10)>div:nth-child(3)'\r\n    );\r\n    await page.waitForTimeout(500);\r\n    await page.click(\r\n      'div > div:first-child > div:nth-child(2)>div:nth-child(3)> div:first-child > div:nth-child(10)>div:nth-child(4)>div:nth-child(2)'\r\n    );\r\n    await page.waitForTimeout(500);\r\n    console.log('[SETUP RULE] SAVE FILTER');\r\n    await page.click(\r\n      'div > div:first-child > div:nth-child(2)>div:nth-child(4)> div:first-child'\r\n    );\r\n  }\r\n  async addIgnoreRule(page: Page): Promise<void> {\r\n    console.log('[SETUP RULE] OPEN SEARCH BOX');\r\n    await page.click(\r\n      'tr[role=\"listitem\"] > td:first-child> span:first-child[role=\"link\"][idlink]'\r\n    );\r\n    console.log('[SETUP RULE] FILL FROM INPUT');\r\n    await page.type(\r\n      'div > div:first-child > div:nth-child(2) > div:first-child > span:nth-child(2) > input',\r\n      'mailer-daemon@googlemail.com'\r\n    );\r\n    console.log('[SETUP RULE] CLICK CREATE FILTER');\r\n    await page.click(\r\n      'div > div:first-child > div:nth-child(2)>div:nth-child(8)>div:nth-child(2)'\r\n    );\r\n    console.log('[SETUP RULE] CHECK MARK AS READ');\r\n    await page.click(\r\n      'div > div:first-child > div:nth-child(2)>div:nth-child(3)> div:first-child > div:nth-child(2) > label'\r\n    );\r\n    console.log('[SETUP RULE] SAVE FILTER');\r\n    await page.click(\r\n      'div > div:first-child > div:nth-child(2)>div:nth-child(4)> div:first-child'\r\n    );\r\n    await page.waitForTimeout(1000);\r\n  }\r\n}\r\n","import { Controller } from '../core/controller';\r\nimport { AuthHandler } from '../handlers/auth.handler';\r\n\r\nexport class AuthController extends Controller<AuthHandler> {}\r\n","import { Controller } from '../core/controller';\r\nimport { ChangeNameHandler } from '../handlers/change-name.handler';\r\n\r\nexport class ChangeNameController extends Controller<ChangeNameHandler> {}\r\n","export { AuthController } from './auth.controller';\r\nexport { ChangeNameController } from './change-name.controller';\r\n","import { Task, IspEnum, Response, Result, TaskEnum } from '@gwarm/views/shared';\r\nimport { BrowserManager } from '../managers/browser.manager';\r\nimport { Isp } from './isp';\r\nimport { Mutex } from 'async-mutex';\r\nimport { promisify } from 'util';\r\nconst sleep = promisify(setTimeout);\r\nexport class Application {\r\n  private applicationId: number;\r\n  private isps = new Map<IspEnum, Isp>();\r\n  private browserManager = new BrowserManager();\r\n  private results = new Map<number, Result>();\r\n  private tasks = new Map<number, Task>();\r\n  private responses = new Map<number, Response>();\r\n  private runningTask: Task | undefined;\r\n  private readonly clientLock = new Mutex();\r\n  openBrowser(headless = true) {\r\n    return this.browserManager.openBrowser(headless);\r\n  }\r\n  public registerIsp(isp: Isp) {\r\n    this.isps.set(isp.name, isp);\r\n  }\r\n\r\n  public async executeTask(\r\n    task: Task,\r\n    multipleContext: boolean\r\n  ): Promise<Response> {\r\n    const release = await this.clientLock.acquire();\r\n    if (this.runningTask && !multipleContext)\r\n      throw new Error(`Task ${this.runningTask.id} is running`);\r\n    this.runningTask = task;\r\n    this.tasks.set(task.id, task);\r\n    const result = new Result();\r\n    const response = new Response();\r\n    this.responses.set(task.id, response);\r\n    this.results.set(task.id, result);\r\n    const isp = this.isps.get(task.isp);\r\n    if (!isp) throw new Error(`ISP ${task.isp} not found`);\r\n    const controller = isp.getController();\r\n    const handler = controller.getHandler(task.action);\r\n    if (!handler)\r\n      throw new Error(`Handler ${task.action} for ${task.isp} is not found`);\r\n    const { context, stoper } = await this.browserManager.createNewContext(\r\n      task.id,\r\n      task.email.session\r\n    );\r\n    await this.browserManager.createNewPage(context);\r\n    sleep(100).then(release);\r\n    const tmp = await controller.execute(\r\n      context,\r\n      task,\r\n      stoper,\r\n      result,\r\n      response\r\n    );\r\n    console.log(tmp);\r\n    await this.browserManager.closeContext(task.id);\r\n    this.runningTask = undefined;\r\n    return response;\r\n  }\r\n  setApplicationId(id: number) {\r\n    this.applicationId = id;\r\n  }\r\n  getApplicationId() {\r\n    return this.applicationId;\r\n  }\r\n  async stopTaskById(id: number) {\r\n    const resolver = this.browserManager.getResolver(id);\r\n    console.log(`resolver`, resolver, id);\r\n    if (!resolver) throw new Error('Resolver not found');\r\n    resolver(this.results.get(id) ?? new Result());\r\n    await this.browserManager.closeContext(id);\r\n  }\r\n\r\n  getTasks() {\r\n    return [...this.tasks.values()];\r\n  }\r\n  getTask(id: number) {\r\n    return this.tasks.get(id);\r\n  }\r\n\r\n  getTasksByTaskName(action: TaskEnum) {\r\n    return [...this.tasks.values()].filter((task) => task.action === action);\r\n  }\r\n\r\n  getResultByTaskId(id: number) {\r\n    console.log(this.results);\r\n    return this.results.get(id);\r\n  }\r\n  getResultByJobId(id: number) {\r\n    const task = [...this.tasks.values()].find((task) => task.jobId === id);\r\n    if (!task) return undefined;\r\n    return this.results.get(task.id);\r\n  }\r\n\r\n  getResponseByTaskId(id: number) {\r\n    return this.responses.get(id);\r\n  }\r\n  getResponseByJobId(id: number) {\r\n    const task = [...this.tasks.values()].find((task) => task.jobId === id);\r\n    if (!task) return undefined;\r\n    return this.responses.get(task.id);\r\n  }\r\n  getTaskByJobId(id: number) {\r\n    return [...this.tasks.values()].find((task) => task.jobId === id);\r\n  }\r\n  stopTaskByJobId(id: number) {\r\n    const task = this.getTaskByJobId(id);\r\n    if (!task) return;\r\n    return this.stopTaskById(task.id);\r\n  }\r\n\r\n  async stopTasksByJobId(id: number) {\r\n    const tasks = [...this.tasks.values()].filter((task) => task.jobId === id);\r\n    for (const task of tasks) {\r\n      if (!task) return;\r\n      await this.stopTaskById(task.id);\r\n    }\r\n  }\r\n}\r\n","import { BrowserContext } from 'playwright-core';\r\nimport { Handler } from './handler';\r\nimport { Response, Result, Task } from '@gwarm/views/shared';\r\nimport { Client } from '@rmp135/imgur';\r\nconst imgur = new Client('43652b743b5a7a0');\r\nconst imgur2 = new Client('fd92777c687299a');\r\n\r\nexport function buildSuccessResponse(\r\n  response: Response,\r\n  task: Task,\r\n  result: Result\r\n): Response {\r\n  response.taskId = task.id;\r\n  response.action = task.action;\r\n  response.jobId = task.jobId;\r\n  response.email = task.email.email;\r\n  response.emailId = task.emailId;\r\n  response.applicationId = task.applicationId;\r\n  response.success = true;\r\n  response.result = result;\r\n  return response;\r\n}\r\n\r\nexport async function buildFailResponse(\r\n  response: Response,\r\n  task: Task,\r\n  error: Error,\r\n  context: BrowserContext\r\n): Promise<Response> {\r\n  response.taskId = task.id;\r\n  response.action = task.action;\r\n  response.jobId = task.jobId;\r\n  response.email = task.email.email;\r\n  response.emailId = task.emailId;\r\n  response.applicationId = task.applicationId;\r\n  response.success = false;\r\n  response.message = error.message;\r\n  const image = await context.pages()[0].screenshot({\r\n    fullPage: true,\r\n    type: 'jpeg',\r\n  });\r\n  try {\r\n    const imageInfo = await imgur.Image.upload(image, {\r\n      title: task.email.email,\r\n      description: response.message,\r\n    });\r\n    response.image = imageInfo.data.link;\r\n  } catch (e: any) {\r\n    console.log(e.body.data.error);\r\n    try {\r\n      const imageInfo = await imgur2.Image.upload(image, {\r\n        title: task.email.email,\r\n        description: response.message,\r\n      });\r\n      response.image = imageInfo.data.link;\r\n    } catch (error) {\r\n      console.log(e.body.data.error);\r\n    }\r\n  }\r\n  return response;\r\n}\r\n\r\nexport class Controller<T extends Handler> {\r\n  constructor(protected handlers = new Map<string, T>()) {}\r\n  public registerHandler(handler: T) {\r\n    this.handlers.set(handler.name, handler);\r\n  }\r\n  public getHandler(isp: string): Handler | undefined {\r\n    return this.handlers.get(isp);\r\n  }\r\n\r\n  async execute(\r\n    context: BrowserContext,\r\n    task: Task,\r\n    stoper: Promise<Result>,\r\n    result: Result,\r\n    response: Response\r\n  ): Promise<Response> {\r\n    const startedAt = Date.now();\r\n\r\n    try {\r\n      const handler = this.getHandler(task.action);\r\n      if (!handler) throw new Error(`Handler ${task.action} not found`);\r\n      console.log(handler);\r\n      console.log(task.payload);\r\n      const t = await Promise.race([\r\n        handler.handle(context, task.email, task.payload, result),\r\n        stoper,\r\n      ]);\r\n      console.log(t);\r\n      buildSuccessResponse(response, task, result);\r\n    } catch (error: any) {\r\n      await buildFailResponse(response, task, error, context);\r\n    }\r\n    const finishedAt = Date.now();\r\n    response.duration = finishedAt - startedAt;\r\n    console.log(response);\r\n    return response;\r\n  }\r\n}\r\n","import { BrowserContext } from 'playwright-core';\r\nimport { TaskEnum, Result, Payload, Email } from '@gwarm/views/shared';\r\n\r\nexport abstract class Handler {\r\n  abstract name: TaskEnum;\r\n  abstract handle(\r\n    context: BrowserContext,\r\n    email: Email,\r\n    payload?: Payload,\r\n    result?: Result\r\n  ): Promise<Result>;\r\n}\r\n","export { Application } from './application';\r\nexport { Controller } from './controller';\r\nexport { Handler } from './handler';\r\nexport { Isp } from './isp';\r\n","import { Controller, Handler } from '../core';\r\nimport { IspEnum, TaskEnum } from '@gwarm/views/shared';\r\n\r\nexport class Isp {\r\n  protected controller: Controller<Handler>;\r\n  public name: IspEnum;\r\n  protected readonly handlers: (new () => Handler)[];\r\n\r\n  constructor() {\r\n    const HANDLERS = new Map<TaskEnum, Handler>();\r\n    console.log(this.handlers);\r\n    for (const handler of this.handlers) {\r\n      const h = new handler();\r\n      HANDLERS.set(h.name, h);\r\n    }\r\n    this.controller = new Controller(HANDLERS);\r\n  }\r\n\r\n  getController() {\r\n    return this.controller;\r\n  }\r\n}\r\n","export { ISP } from './isp.decorator';\r\n","import { IspEnum } from '@gwarm/views/shared';\r\nimport { Handler } from '../core';\r\n\r\nexport function ISP(\r\n  name: IspEnum,\r\n  handlers: (new () => Handler)[]\r\n): ClassDecorator {\r\n  return function (target) {\r\n    target.prototype.name = name;\r\n    target.prototype.handlers = handlers;\r\n  };\r\n}\r\n","import { Handler } from '../core/handler';\r\nimport { BrowserContext } from 'playwright-core';\r\nimport {\r\n    AddContactPayload,\r\n    AddContactResult,\r\n    Email,\r\n    TaskEnum,\r\n} from '@gwarm/views/shared';\r\nexport abstract class AddContactHandler extends Handler {\r\n    public name = TaskEnum.ADD_CONTACT;\r\n    abstract override handle(\r\n        context: BrowserContext,\r\n        email: Email,\r\n        payload: AddContactPayload,\r\n        result: AddContactResult\r\n    ): Promise<AddContactResult>;\r\n}\r\n","import { Handler } from '../core/handler';\r\nimport { AuthPayload, AuthResult, Email, TaskEnum } from '@gwarm/views/shared';\r\nimport { BrowserContext } from 'playwright-core';\r\n\r\nexport abstract class AuthHandler extends Handler {\r\n  public name = TaskEnum.AUTHENTICATION;\r\n  abstract override handle(\r\n    context: BrowserContext,\r\n    email: Email,\r\n    payload?: AuthPayload,\r\n    result?: AuthResult\r\n  ): Promise<AuthResult>;\r\n}\r\n","import { Handler } from '../core/handler';\r\nimport { BrowserContext } from 'playwright-core';\r\nimport {\r\n  ChangeNamePayload,\r\n  ChangeNameResult,\r\n  Email,\r\n  TaskEnum,\r\n} from '@gwarm/views/shared';\r\nexport abstract class ChangeNameHandler extends Handler {\r\n  public name = TaskEnum.CHANGE_NAME;\r\n  abstract override handle(\r\n    context: BrowserContext,\r\n    email: Email,\r\n    payload: ChangeNamePayload,\r\n    result: ChangeNameResult\r\n  ): Promise<ChangeNameResult>;\r\n}\r\n","export { AuthHandler } from './auth.handler';\r\nexport { ChangeNameHandler } from './change-name.handler';\r\nexport { RemoveDeviceHandler } from './remove-devices.handler';\r\nexport { ReplyHandler } from './reply.handler';\r\nexport { SetupRuleHandler } from './setup-rule.handler';\r\nexport { AddContactHandler } from './add-contact.handler';\r\nexport { RemoveContacttHandler } from './remove-contact.handler'\r\n","import { Handler } from '../core/handler';\r\nimport { BrowserContext } from 'playwright-core';\r\nimport {\r\n    Email,\r\n    RemoveContactPayload,\r\n    RemoveContactResult,\r\n    TaskEnum,\r\n} from '@gwarm/views/shared';\r\nexport abstract class RemoveContacttHandler extends Handler {\r\n    public name = TaskEnum.REMOVE_CONTACT;\r\n    abstract override handle(\r\n        context: BrowserContext,\r\n        email: Email,\r\n        payload: RemoveContactPayload,\r\n        result: RemoveContactResult\r\n    ): Promise<RemoveContactResult>;\r\n}","import { Handler } from '../core/handler';\r\nimport { BrowserContext } from 'playwright-core';\r\nimport { Email, Payload, Result, TaskEnum } from '@gwarm/views/shared';\r\nexport abstract class RemoveDeviceHandler extends Handler {\r\n  public name = TaskEnum.REMOVE_DEVICES;\r\n  abstract override handle(\r\n    context: BrowserContext,\r\n    email: Email,\r\n    payload: Payload\r\n  ): Promise<Result>;\r\n}\r\n","import { Handler } from '../core/handler';\r\nimport { BrowserContext } from 'playwright-core';\r\nimport {\r\n  Email,\r\n  ReplyResult,\r\n  ReplyPayload,\r\n  TaskEnum,\r\n} from '@gwarm/views/shared';\r\nexport abstract class ReplyHandler extends Handler {\r\n  public name = TaskEnum.REPLY;\r\n  abstract override handle(\r\n    context: BrowserContext,\r\n    email: Email,\r\n    payload: ReplyPayload,\r\n    res: ReplyResult\r\n  ): Promise<ReplyResult>;\r\n}\r\n","import {\r\n  Email,\r\n  SetupRulePayload,\r\n  SetupRuleResult,\r\n  TaskEnum,\r\n} from '@gwarm/views/shared';\r\nimport { BrowserContext } from 'playwright-core';\r\nimport { Handler } from '../core';\r\n\r\nexport abstract class SetupRuleHandler extends Handler {\r\n  public name = TaskEnum.SETUP_RULE;\r\n  abstract override handle(\r\n    context: BrowserContext,\r\n    email: Email,\r\n    payload: SetupRulePayload,\r\n    result: SetupRuleResult\r\n  ): Promise<SetupRuleResult>;\r\n}\r\n","export * from './handlers';\r\nexport * from './controllers';\r\nexport * from './core';\r\nexport * from './managers';\r\nexport * from './decorators';\r\n","import { readFileSync } from 'fs';\r\nimport { createHash } from 'crypto';\r\nimport {\r\n  Browser,\r\n  BrowserContext,\r\n  BrowserContextOptions,\r\n  firefox,\r\n} from 'playwright-core';\r\nimport { join } from 'path';\r\nimport { inflateSync } from 'zlib';\r\nimport { Result } from '@gwarm/views/shared';\r\nclass Context {\r\n  context: BrowserContext;\r\n  stoper: Promise<Result>;\r\n}\r\nexport class BrowserManager {\r\n  private browser: Browser;\r\n  private contexts = new Map<number, BrowserContext>();\r\n  private stopers = new Map<number, Promise<Result>>();\r\n  private resolvers = new Map<number, (result: Result) => void>();\r\n  async openBrowser(headless = true) {\r\n    this.browser = await firefox.launch({\r\n      headless: headless,\r\n      args: ['--lang=\"it-IT\"'],\r\n    });\r\n    return this.browser;\r\n  }\r\n  async createNewContext(taskId: number, session?: string): Promise<Context> {\r\n    const options: BrowserContextOptions = {\r\n      locale: 'en-US',\r\n      bypassCSP: true,\r\n      colorScheme: 'dark',\r\n      acceptDownloads: true,\r\n      permissions: ['geolocation'],\r\n      reducedMotion: 'reduce',\r\n      extraHTTPHeaders: {\r\n        'accept-language': 'en-US,en;q=0.9',\r\n      },\r\n    };\r\n    if (session) {\r\n      const s = JSON.parse(\r\n        inflateSync(Buffer.from(session, 'base64')).toString()\r\n      );\r\n      const state = JSON.parse(s);\r\n      options.storageState = state;\r\n    }\r\n\r\n    const context = await this.browser.newContext(options);\r\n    const contextId = taskId;\r\n    this.contexts.set(contextId, context);\r\n    const stoper = new Promise<Result>((resolve) => {\r\n      this.resolvers.set(contextId, resolve);\r\n    });\r\n    this.stopers.set(contextId, stoper);\r\n    return { context, stoper };\r\n  }\r\n\r\n  getContextId(context: BrowserContext) {\r\n    return createHash('md5').update(JSON.stringify(context)).digest('hex');\r\n  }\r\n\r\n  async createNewPage(context: BrowserContext) {\r\n    const page = await context.newPage();\r\n    const intialScript = readFileSync(\r\n      join(__dirname, 'utils/initial-context.js')\r\n    ).toString();\r\n    await page.addInitScript(intialScript);\r\n  }\r\n  async closeContext(id: number) {\r\n    const context = this.contexts.get(id);\r\n    this.contexts.delete(id);\r\n    context?.close();\r\n  }\r\n\r\n  async closeBrowser() {\r\n    await this.browser.close();\r\n  }\r\n  getResolver(id: number) {\r\n    console.log(`getResolver`, this.resolvers);\r\n    return this.resolvers.get(id);\r\n  }\r\n}\r\n","export { BrowserManager } from './browser.manager';\r\n","import { Isp, ISP } from '@gwarm/robot/core';\r\nimport { IspEnum } from '@gwarm/views/shared';\r\nimport { GMAIL_HANDLERS } from './handlers';\r\n\r\n@ISP(IspEnum.GMAIL, GMAIL_HANDLERS)\r\nexport class Gmail extends Isp {}\r\n","import { GmailAuthHandler } from '@gwarm/gmail-auth-handler';\r\nimport { GmailChangeNameHandler } from '@gwarm/gmail-change-name-handler';\r\nimport { GmailRemoveApplicationsHandler } from '@gwarm/gmail-remove-applications-handler';\r\n// import { GmailReportingHandler } from '@gwarm/gmail-reporting-handler';\r\nimport { GmailRemoveDevicesHandler } from '@gwarm/gmail-remove-devices-handler';\r\nimport { GmailReplyHandler } from '@gwarm/gmail-reply-handler';\r\nimport { GmailSetupRuleHandler } from '@gwarm/gmail-setup-rule-handler';\r\nexport const GMAIL_HANDLERS = [\r\n  GmailAuthHandler,\r\n  GmailChangeNameHandler,\r\n  GmailRemoveDevicesHandler,\r\n  GmailReplyHandler,\r\n  GmailSetupRuleHandler,\r\n  // GmailReportingHandler,\r\n];\r\n","export { Gmail } from './gmail';\r\n","import {\r\n  ApiOperation,\r\n  ApiResponse,\r\n  ApiResponseMetadata,\r\n  ApiOperationOptions,\r\n} from '@nestjs/swagger';\r\n\r\nimport { applyDecorators } from '@nestjs/common';\r\n\r\nexport type ApiOperationAndResponse = {\r\n  responseMetadata: ApiResponseMetadata;\r\n  operationOptions: ApiOperationOptions;\r\n};\r\n\r\nexport const ApiWithTokenResponse = (\r\n  options: ApiOperationAndResponse\r\n): MethodDecorator => {\r\n  return applyDecorators(\r\n    ApiOperation(options.operationOptions),\r\n    ApiResponse({ status: 200, ...options.responseMetadata })\r\n  );\r\n};\r\n","export * from './api-with-token.decorator';\r\n","export * from './shared.module';\r\nexport * from './services';\r\nexport * from './decorators';\r\nexport * from './utils';\r\n","export * from './token.service';\r\n","import { Inject, Injectable, Scope } from '@nestjs/common';\r\nimport { REQUEST } from '@nestjs/core';\r\nimport { Request } from 'express';\r\n\r\n@Injectable({\r\n  scope: Scope.REQUEST,\r\n})\r\nexport class TokenService {\r\n  constructor(@Inject(REQUEST) private readonly request: Request) {}\r\n  getJwt(): string {\r\n    if (!this.request.headers.authorization) {\r\n      return '';\r\n    }\r\n    return this.request.headers.authorization.split('Bearer')[1].trim();\r\n  }\r\n}\r\n","import { Module, Global } from '@nestjs/common';\r\nimport { TokenService } from './services/token.service';\r\n\r\n@Global()\r\n@Module({\r\n  controllers: [],\r\n  providers: [TokenService],\r\n  exports: [TokenService],\r\n})\r\nexport class SharedModule {}\r\n","export function distributedIntRandom(arr: number[]): number {\r\n  let tmp: number[] = [];\r\n  for (let i = 0; i < arr.length; i++) {\r\n    tmp = [...tmp, ...new Array(arr[i]).fill(i)];\r\n  }\r\n  tmp = shuffle(tmp);\r\n  const index = Math.floor(Math.random() * arr.reduce((a, b) => a + b, 1));\r\n  return tmp[index];\r\n}\r\n\r\nexport function shuffle<T>(array: T[]): T[] {\r\n  let currentIndex = array.length,\r\n    randomIndex;\r\n\r\n  // While there remain elements to shuffle.\r\n  while (currentIndex != 0) {\r\n    // Pick a remaining element.\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex--;\r\n\r\n    // And swap it with the current element.\r\n    [array[currentIndex], array[randomIndex]] = [\r\n      array[randomIndex],\r\n      array[currentIndex],\r\n    ];\r\n  }\r\n\r\n  return array;\r\n}\r\n","type EitherSuccess<Data> = {\r\n  isFail: false;\r\n  value: Data;\r\n};\r\n\r\ntype EitherFail<Err> = {\r\n  isFail: true;\r\n  error: Err;\r\n};\r\n\r\nexport type Either<Data, Err> = EitherSuccess<Data> | EitherFail<Err>;\r\n\r\nexport const fail = <Err>(error: Err): Either<never, Err> => ({\r\n  isFail: true,\r\n  error,\r\n});\r\n\r\nexport const success = <Data>(value: Data): Either<Data, never> => ({\r\n  isFail: false,\r\n  value,\r\n});\r\n\r\nexport function isFail<Data, Err>(\r\n  either: Either<Data, Err>\r\n): either is EitherFail<Err> {\r\n  return either.isFail;\r\n}\r\n\r\nexport function isSuccess<Data, Err>(\r\n  either: Either<Data, Err>\r\n): either is EitherSuccess<Data> {\r\n  return !either.isFail;\r\n}\r\n","export * from './either';\r\nexport * from './distributed-random';\r\n","import { ApiProperty } from '@nestjs/swagger';\r\n\r\nexport class Application {\r\n  @ApiProperty()\r\n  type: string;\r\n  @ApiProperty()\r\n  source: string;\r\n  @ApiProperty()\r\n  link: string;\r\n  @ApiProperty()\r\n  capacity: number;\r\n}\r\n","import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\r\nimport { IsEmail, IsNotEmpty, IsString } from 'class-validator';\r\n\r\nexport class Email {\r\n  @ApiProperty()\r\n  @IsEmail()\r\n  @IsNotEmpty()\r\n  email!: string;\r\n  @ApiProperty()\r\n  @IsString()\r\n  @IsNotEmpty()\r\n  password!: string;\r\n  @ApiProperty()\r\n  @IsEmail()\r\n  @IsNotEmpty()\r\n  confirmationEmail!: string;\r\n  @ApiPropertyOptional()\r\n  @IsEmail()\r\n  @IsNotEmpty()\r\n  session?: string;\r\n}\r\n","export * from './payload';\r\nexport * from './result';\r\nexport * from './task';\r\nexport * from './response';\r\nexport * from './email';\r\nexport * from './job-config';\r\nexport * from './application';\r\n","export class Payload {}\r\n","import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\r\nimport { TaskEnum } from '../enums';\r\nimport { Result } from './result';\r\n\r\nexport class Response {\r\n  @ApiProperty()\r\n  taskId: number;\r\n  @ApiProperty()\r\n  jobId: number;\r\n  @ApiProperty({ enum: TaskEnum })\r\n  action: TaskEnum;\r\n  @ApiProperty()\r\n  success: boolean;\r\n  result?: Result;\r\n  @ApiProperty()\r\n  message?: string;\r\n  @ApiPropertyOptional()\r\n  image?: string;\r\n  @ApiProperty()\r\n  duration: number;\r\n  @ApiProperty()\r\n  email: string;\r\n  @ApiProperty()\r\n  application: number;\r\n  @ApiProperty()\r\n  emailId: number;\r\n  @ApiProperty()\r\n  applicationId: number;\r\n}\r\n","export class Result {}\r\n","import { ApiProperty } from '@nestjs/swagger';\r\nimport { TaskEnum, IspEnum } from '../enums';\r\nimport { Email } from './email';\r\nimport { Payload } from './payload';\r\nexport class Task {\r\n  @ApiProperty()\r\n  id: number;\r\n  @ApiProperty()\r\n  jobId: number;\r\n  @ApiProperty({ enum: TaskEnum })\r\n  action: TaskEnum;\r\n  @ApiProperty()\r\n  email: Email;\r\n\r\n  payload: Payload;\r\n  @ApiProperty({ enum: IspEnum })\r\n  isp: IspEnum;\r\n  @ApiProperty()\r\n  emailId: number;\r\n  @ApiProperty()\r\n  applicationId: number;\r\n}\r\n","export * from './task.enum';\r\nexport * from './isp.enum';\r\nexport * from './task-status.enum';\r\n","export enum IspEnum {\r\n  AOL = 'AOL',\r\n  GMAIL = 'GMAIL',\r\n  HOTMAIL = 'HOTMAIL',\r\n  YAHOO = 'YAHOO',\r\n  PROTON = 'PROTON',\r\n}\r\n","export enum TaskStatusEnum {\r\n  PENDING = 'PENDING',\r\n  RUNNING = 'RUNNING',\r\n  SUCCESS = 'SUCCESS',\r\n  FAILED = 'FAILED',\r\n}\r\n","export enum TaskEnum {\r\n  AUTHENTICATION = 'AUTHENTICATION',\r\n  CHANGE_NAME = 'CHANGE_NAME',\r\n  ADD_CONTACT = 'ADD_CONTACT',\r\n  REMOVE_CONTACT = 'REMOVE_CONTACT',\r\n  ADD_RULE = 'ADD_RULE',\r\n  REPORTING = 'REPORTING',\r\n  REMOVE_DEVICES = 'REMOVE_DEVICES',\r\n  REPLY = 'REPLY',\r\n  SETUP_RULE = 'SETUP_RULE',\r\n  CREATE_PROTON = 'CREATE_PROTON',\r\n}\r\n","export * from './tasks';\r\nexport * from './core';\r\nexport * from './enums';\r\nexport * from './payloads';\r\nexport * from './results';\r\nexport * from './jobs';\r\nexport * from './responses';\r\n","import { JobConfig } from '../core/job-config';\r\nimport { TaskEnum } from '../enums';\r\nimport { AddContactPayload } from '../payloads/add-contact.payload';\r\nimport { AddContactResponse } from '../responses/add-contact.response';\r\nimport { AddContactResult } from '../results/add-contact.result';\r\nimport { AddContactTask } from '../tasks/add-contact.task';\r\n\r\nexport const AddContactConfigJob: JobConfig = {\r\n    action: TaskEnum.ADD_CONTACT,\r\n    payload: AddContactPayload,\r\n    result: AddContactResult,\r\n    response: AddContactResponse,\r\n    task: AddContactTask,\r\n};\r\n","import { JobConfig } from '../core/job-config';\r\nimport { TaskEnum } from '../enums';\r\nimport { ChangeNamePayload } from '../payloads';\r\nimport { AddRuleResponse } from '../responses';\r\nimport { AuthResult } from '../results';\r\nimport { AddRuleTask } from '../tasks';\r\n\r\nexport const AddRuleConfigJob: JobConfig = {\r\n  action: TaskEnum.ADD_RULE,\r\n  payload: ChangeNamePayload,\r\n  result: AuthResult,\r\n  response: AddRuleResponse,\r\n  task: AddRuleTask,\r\n};\r\n","import { JobConfig } from '../core/job-config';\r\nimport { TaskEnum } from '../enums';\r\nimport { AuthPayload } from '../payloads';\r\nimport { AuthResponse } from '../responses';\r\nimport { AuthResult } from '../results';\r\nimport { AuthTask } from '../tasks';\r\n\r\nexport const AuthConfigJob: JobConfig = {\r\n  action: TaskEnum.AUTHENTICATION,\r\n  payload: AuthPayload,\r\n  result: AuthResult,\r\n  response: AuthResponse,\r\n  task: AuthTask,\r\n};\r\n","import { JobConfig } from '../core/job-config';\r\nimport { TaskEnum } from '../enums';\r\nimport { ChangeNamePayload } from '../payloads';\r\nimport { ChangeNameResponse } from '../responses';\r\nimport { ChangeNameResult } from '../results';\r\nimport { ChangeNameTask } from '../tasks';\r\n\r\nexport const ChangeNameConfigJob: JobConfig = {\r\n  action: TaskEnum.CHANGE_NAME,\r\n  payload: ChangeNamePayload,\r\n  result: ChangeNameResult,\r\n  response: ChangeNameResponse,\r\n  task: ChangeNameTask,\r\n};\r\n","export * from './auth-config.job';\r\nexport * from './change-name-config.job';\r\n\r\nimport { AddRuleConfigJob } from './add-rule-config.job';\r\nimport { AuthConfigJob } from './auth-config.job';\r\nimport { ChangeNameConfigJob } from './change-name-config.job';\r\nimport { RemoveDevicesConfigJob } from './remove-devices-config.job';\r\nimport { ReplyConfigJob } from './reply-config.job';\r\nimport { SetupRuleConfigJob } from './setup-rule-config.job';\r\nimport { AddContactConfigJob } from './add-contact-config.job';\r\nimport { RemoveContactConfigJob } from './remove-contact-config.job'\r\nexport const JOBS_CONFIG = [\r\n  AuthConfigJob,\r\n  ChangeNameConfigJob,\r\n  AddRuleConfigJob,\r\n  RemoveDevicesConfigJob,\r\n  ReplyConfigJob,\r\n  SetupRuleConfigJob,\r\n  AddContactConfigJob,\r\n  RemoveContactConfigJob\r\n];\r\n","import { JobConfig } from '../core/job-config';\r\nimport { TaskEnum } from '../enums';\r\nimport { RemoveContactPayload } from '../payloads/remove-contact.payload';\r\nimport { RemoveContactResponse } from '../responses/remove-contact.response';\r\nimport { RemoveContactResult } from '../results/remove-contact.result';\r\nimport { RemoveContactTask } from '../tasks/remove-contact.task';\r\n\r\nexport const RemoveContactConfigJob: JobConfig = {\r\n    action: TaskEnum.REMOVE_CONTACT,\r\n    payload: RemoveContactPayload,\r\n    result: RemoveContactResult,\r\n    response: RemoveContactResponse,\r\n    task: RemoveContactTask,\r\n};\r\n","import { Payload, Result } from '../core';\r\nimport { JobConfig } from '../core/job-config';\r\nimport { TaskEnum } from '../enums';\r\nimport { RemoveDevicesResponse } from '../responses/remove-device.response';\r\nimport { RemoveDevicesTask } from '../tasks';\r\n\r\nexport const RemoveDevicesConfigJob: JobConfig = {\r\n  action: TaskEnum.REMOVE_DEVICES,\r\n  payload: Payload,\r\n  result: Result,\r\n  response: RemoveDevicesResponse,\r\n  task: RemoveDevicesTask,\r\n};\r\n","import { JobConfig } from '../core/job-config';\r\nimport { TaskEnum } from '../enums';\r\nimport { ReplyPayload } from '../payloads/reply.payload';\r\nimport { ReplyResponse } from '../responses';\r\nimport { ReplyResult } from '../results';\r\nimport { ReplyTask } from '../tasks';\r\n\r\nexport const ReplyConfigJob: JobConfig = {\r\n  action: TaskEnum.REPLY,\r\n  payload: ReplyPayload,\r\n  result: ReplyResult,\r\n  response: ReplyResponse,\r\n  task: ReplyTask,\r\n};\r\n","import { JobConfig } from '../core/job-config';\r\nimport { TaskEnum } from '../enums';\r\nimport { SetupRulePayload } from '../payloads';\r\nimport { SetupRuleResponse } from '../responses';\r\nimport { SetupRuleResult } from '../results';\r\nimport { ReplyTask } from '../tasks';\r\n\r\nexport const SetupRuleConfigJob: JobConfig = {\r\n  action: TaskEnum.SETUP_RULE,\r\n  payload: SetupRulePayload,\r\n  result: SetupRuleResult,\r\n  response: SetupRuleResponse,\r\n  task: ReplyTask,\r\n};\r\n","import { ApiProperty } from '@nestjs/swagger';\r\nimport { IsNotEmpty, IsString } from 'class-validator';\r\nimport { Payload } from '../core/payload';\r\nexport class AddContactPayload extends Payload {\r\n    @ApiProperty()\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    domain!: string;\r\n}","import { Payload } from '../core/payload';\r\nexport class AddRulePayload extends Payload {}\r\n","import { Payload } from '../core/payload';\r\nexport class AuthPayload extends Payload {}\r\n","import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\r\nimport { IsBoolean, IsNotEmpty, IsString } from 'class-validator';\r\nimport { Payload } from '../core/payload';\r\n\r\nexport class ChangeNamePayload extends Payload {\r\n  @ApiProperty()\r\n  @IsString()\r\n  @IsNotEmpty()\r\n  name!: string;\r\n  @ApiProperty({ default: false })\r\n  @IsBoolean()\r\n  withPlus: boolean;\r\n  @ApiProperty({ default: 0, type: Number })\r\n  numberOfPoints: number;\r\n  @ApiPropertyOptional()\r\n  @IsString()\r\n  extension: string;\r\n}\r\n","import { Payload } from '../core';\r\n\r\nexport class CreateProtonPayload extends Payload {}\r\n","export * from './auth.payload';\r\nexport * from './change-name.payload';\r\nexport * from './reporting.payload';\r\nexport * from './reporting';\r\nexport * from './reply.payload';\r\nexport * from './remove-devices.payload';\r\nexport * from './add-rule.payload';\r\nexport * from './setup-rule.payload';\r\nexport * from './create-proton.payload';\r\nexport * from './add-contact.payload';\r\nexport * from './remove-contact.payload';\r\n\r\nimport { AuthPayload } from './auth.payload';\r\nimport { ChangeNamePayload } from './change-name.payload';\r\nimport { ReportingPayload } from './reporting.payload';\r\nimport { ReplyPayload } from './reply.payload';\r\nimport { RemoveDevicesPayload } from './remove-devices.payload';\r\nimport { AddRulePayload } from './add-rule.payload';\r\nimport { SetupRulePayload } from './setup-rule.payload';\r\nimport { CreateProtonPayload } from './create-proton.payload';\r\nimport { AddContactPayload } from './add-contact.payload';\r\nimport { RemoveContactPayload } from './remove-contact.payload';\r\nexport const PAYLOADS = [\r\n  ReplyPayload,\r\n  AuthPayload,\r\n  ChangeNamePayload,\r\n  ReportingPayload,\r\n  RemoveDevicesPayload,\r\n  AddRulePayload,\r\n  SetupRulePayload,\r\n  CreateProtonPayload,\r\n  AddContactPayload,\r\n  RemoveContactPayload\r\n];\r\nexport type PAYLOAD_TYPE =\r\n  | ReplyPayload\r\n  | AuthPayload\r\n  | ChangeNamePayload\r\n  | ReportingPayload\r\n  | RemoveDevicesPayload\r\n  | AddRulePayload\r\n  | SetupRulePayload\r\n  | CreateProtonPayload\r\n  | AddContactPayload\r\n  | RemoveContactPayload;\r\n","import { ApiProperty } from '@nestjs/swagger';\r\nimport { IsNotEmpty, IsString } from 'class-validator';\r\nimport { Payload } from '../core/payload';\r\nexport class RemoveContactPayload extends Payload {\r\n    @ApiProperty()\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    domain!: string;\r\n}","import { Payload } from '../core/payload';\r\n\r\nexport class RemoveDevicesPayload extends Payload {}\r\n","import { ApiProperty } from '@nestjs/swagger';\r\nimport {\r\n  IsBoolean,\r\n  IsNotEmpty,\r\n  IsNumber,\r\n  IsPositive,\r\n  IsString,\r\n} from 'class-validator';\r\nimport { Payload } from '../core/payload';\r\n\r\nclass Placeholder {\r\n  @ApiProperty({ type: String })\r\n  key: string;\r\n  @ApiProperty({ type: String })\r\n  value: string[];\r\n}\r\n\r\nexport class ReplyPayload extends Payload {\r\n  @ApiProperty()\r\n  @IsString()\r\n  @IsNotEmpty()\r\n  filter!: string;\r\n  @ApiProperty({\r\n    isArray: true,\r\n    type: Placeholder,\r\n  })\r\n  placeholders: Placeholder[];\r\n  @ApiProperty()\r\n  @IsString()\r\n  @IsNotEmpty()\r\n  body!: string;\r\n  @ApiProperty({ default: 500 })\r\n  @IsNumber()\r\n  @IsPositive()\r\n  limit!: number;\r\n  @ApiProperty({ default: false })\r\n  @IsBoolean()\r\n  reset!: boolean;\r\n}\r\n","import { ApiPropertyOptional } from '@nestjs/swagger';\r\nimport { Payload } from '../core';\r\nimport { ReportingInboxPyload } from './reporting/inbox.payloads';\r\nimport { ReportingPromotionsPayload } from './reporting/promotion.payloads';\r\nimport { ReportingSpamPayload } from './reporting/spam.payloads';\r\n\r\nexport class ReportingPayload extends Payload {\r\n  inbox: ReportingInboxPyload;\r\n  filter: ReportingFilterPayload;\r\n  spam: ReportingSpamPayload;\r\n  promotion: ReportingPromotionsPayload;\r\n}\r\n\r\nexport class ReportingFilterPayload {\r\n  @ApiPropertyOptional()\r\n  subject?: string;\r\n  @ApiPropertyOptional()\r\n  from?: string;\r\n  @ApiPropertyOptional()\r\n  email?: string;\r\n  @ApiPropertyOptional({\r\n    default: new Date().setDate(new Date().getDate() - 1),\r\n  })\r\n  date: number;\r\n}\r\n","import { ApiPropertyOptional } from '@nestjs/swagger';\r\n\r\nexport class ReportingInboxPyload {\r\n  @ApiPropertyOptional({\r\n    default: 0,\r\n    minimum: 0,\r\n    maximum: 100,\r\n  })\r\n  archive?: number;\r\n  @ApiPropertyOptional({\r\n    default: 0,\r\n    minimum: 0,\r\n    maximum: 100,\r\n  })\r\n  delete?: number;\r\n  @ApiPropertyOptional({\r\n    default: 0,\r\n    minimum: 0,\r\n    maximum: 100,\r\n  })\r\n  star?: number;\r\n  @ApiPropertyOptional({\r\n    default: 0,\r\n    minimum: 0,\r\n    maximum: 100,\r\n  })\r\n  important?: number;\r\n}\r\n","export * from './inbox.payloads';\r\nexport * from './spam.payloads';\r\nexport * from './promotion.payloads';\r\n","export class ReportingPromotionsPayload {\r\n  actions: ReportingPromotionsActions;\r\n}\r\n\r\nexport class ReportingPromotionsActions {\r\n  move: number;\r\n  drag: number;\r\n  select: number;\r\n  moveAll: boolean;\r\n  total: number;\r\n}\r\nexport class ReportingPromitionsOthers {}\r\n","export class ReportingSpamPayload {\r\n  actions: ReportingSpamActions;\r\n  others: ReportingSpamOthers;\r\n}\r\n\r\nexport class ReportingSpamActions {\r\n  move: number;\r\n  drag: number;\r\n  select: number;\r\n  moveAll: boolean;\r\n  total: number;\r\n}\r\nexport class ReportingSpamOthers {\r\n  delete: number;\r\n  total: number;\r\n}\r\n","import { Payload } from '../core';\r\n\r\nexport class SetupRulePayload extends Payload {}\r\n","import { ApiProperty } from '@nestjs/swagger';\r\nimport { Response } from '../core';\r\nimport { TaskEnum } from '../enums';\r\nimport { AddContactResult } from '../results/add-contact.result';\r\n\r\nexport class AddContactResponse extends Response {\r\n    @ApiProperty({\r\n        type: TaskEnum.ADD_CONTACT,\r\n        default: TaskEnum.ADD_CONTACT,\r\n    })\r\n    override action: TaskEnum.ADD_CONTACT;\r\n    @ApiProperty()\r\n    override result: AddContactResult;\r\n}\r\n","import { ApiProperty } from '@nestjs/swagger';\r\nimport { Response } from '../core';\r\nimport { TaskEnum } from '../enums';\r\nimport { AddRuleRsult } from '../results';\r\n\r\nexport class AddRuleResponse extends Response {\r\n  @ApiProperty({\r\n    type: TaskEnum.ADD_RULE,\r\n    default: TaskEnum.ADD_RULE,\r\n  })\r\n  override action: TaskEnum.ADD_RULE;\r\n  @ApiProperty()\r\n  override result: AddRuleRsult;\r\n}\r\n","import { ApiProperty } from '@nestjs/swagger';\r\nimport { Response } from '../core';\r\nimport { TaskEnum } from '../enums';\r\nimport { AuthResult } from '../results';\r\n\r\nexport class AuthResponse extends Response {\r\n  @ApiProperty({\r\n    type: TaskEnum.AUTHENTICATION,\r\n    default: TaskEnum.AUTHENTICATION,\r\n  })\r\n  override action: TaskEnum.AUTHENTICATION;\r\n  @ApiProperty()\r\n  override result: AuthResult;\r\n}\r\n","import { ApiProperty } from '@nestjs/swagger';\r\nimport { Response } from '../core';\r\nimport { TaskEnum } from '../enums';\r\nimport { ChangeNameResult } from '../results';\r\n\r\nexport class ChangeNameResponse extends Response {\r\n  @ApiProperty({\r\n    type: TaskEnum.CHANGE_NAME,\r\n    default: TaskEnum.CHANGE_NAME,\r\n  })\r\n  override action: TaskEnum.CHANGE_NAME;\r\n  @ApiProperty()\r\n  override result: ChangeNameResult;\r\n}\r\n","export * from './auth.response';\r\nexport * from './change-name.response';\r\nexport * from './reply.response';\r\nexport * from './add-rule.response';\r\nexport * from './setup-rule.response';\r\nexport * from './add-contact.response';\r\nexport * from './remove-contact.response'\r\n","import { ApiProperty } from '@nestjs/swagger';\r\nimport { Response } from '../core';\r\nimport { TaskEnum } from '../enums';\r\nimport { RemoveContactResult } from '../results/remove-contact.result';\r\n\r\nexport class RemoveContactResponse extends Response {\r\n    @ApiProperty({\r\n        type: TaskEnum.REMOVE_CONTACT,\r\n        default: TaskEnum.REMOVE_CONTACT,\r\n    })\r\n    override action: TaskEnum.REMOVE_CONTACT;\r\n    @ApiProperty()\r\n    override result: RemoveContactResult;\r\n}","import { ApiProperty } from '@nestjs/swagger';\r\nimport { Response } from '../core';\r\nimport { TaskEnum } from '../enums';\r\nimport { AddRuleRsult } from '../results';\r\n\r\nexport class RemoveDevicesResponse extends Response {\r\n  @ApiProperty({\r\n    type: TaskEnum.REMOVE_DEVICES,\r\n    default: TaskEnum.REMOVE_DEVICES,\r\n  })\r\n  override action: TaskEnum.REMOVE_DEVICES;\r\n  @ApiProperty()\r\n  override result: AddRuleRsult;\r\n}\r\n","import { ApiProperty } from '@nestjs/swagger';\r\nimport { Response } from '../core';\r\nimport { TaskEnum } from '../enums';\r\nimport { ReplyResult } from '../results';\r\n\r\nexport class ReplyResponse extends Response {\r\n  @ApiProperty({\r\n    type: TaskEnum.REPLY,\r\n    default: TaskEnum.REPLY,\r\n  })\r\n  override action: TaskEnum.REPLY;\r\n  @ApiProperty()\r\n  override result: ReplyResult;\r\n}\r\n","import { ApiProperty } from '@nestjs/swagger';\r\nimport { Response } from '../core';\r\nimport { TaskEnum } from '../enums';\r\nimport { SetupRuleResult } from '../results';\r\n\r\nexport class SetupRuleResponse extends Response {\r\n  @ApiProperty({\r\n    type: TaskEnum.SETUP_RULE,\r\n    default: TaskEnum.SETUP_RULE,\r\n  })\r\n  override action: TaskEnum.SETUP_RULE;\r\n  @ApiProperty()\r\n  override result: SetupRuleResult;\r\n}\r\n","import { Result } from '../core/result';\r\n\r\nexport class AddContactResult extends Result { }","import { Result } from '../core/result';\r\n\r\nexport class AddRuleRsult extends Result {}\r\n","import { ApiProperty } from '@nestjs/swagger';\r\nimport { Result } from '../core/result';\r\n\r\nexport class AuthResult extends Result {\r\n  @ApiProperty()\r\n  token?: string;\r\n  @ApiProperty()\r\n  error?: string;\r\n}\r\n","import { ApiProperty } from '@nestjs/swagger';\r\nimport { Result } from '../core/result';\r\n\r\nexport class ChangeNameResult extends Result {\r\n  @ApiProperty()\r\n  name: string;\r\n  @ApiProperty()\r\n  oldName: string;\r\n}\r\n","export * from './change-name.result';\r\nexport * from './auth.result';\r\nexport * from './pagination.result';\r\nexport * from './reporting.result';\r\nexport * from './reply.result';\r\nexport * from './add-rule.result';\r\nexport * from './remove-devices.result';\r\nexport * from './setup-rule.result';\r\nexport * from './add-contact.result';\r\nexport * from './remove-contact.result'\r\n","import { ApiProperty } from '@nestjs/swagger';\r\nimport { IsBoolean, IsNumber } from 'class-validator';\r\nexport class PaginationResult<T> {\r\n  @ApiProperty()\r\n  @IsNumber()\r\n  size: number;\r\n  @ApiProperty()\r\n  @IsNumber()\r\n  page: number;\r\n  @ApiProperty()\r\n  @IsNumber()\r\n  totalItems: number;\r\n  @ApiProperty()\r\n  @IsNumber()\r\n  totalPages: number;\r\n  @ApiProperty()\r\n  @IsBoolean()\r\n  hasPrev: boolean;\r\n  @ApiProperty()\r\n  @IsBoolean()\r\n  hasNext: boolean;\r\n  @ApiProperty()\r\n  content: T[];\r\n}\r\n","import { Result } from '../core/result';\r\n\r\nexport class RemoveContactResult extends Result { }","import { Result } from '../core/result';\r\n\r\nexport class RemoveDevicesResult extends Result {}\r\n","import { ApiProperty } from '@nestjs/swagger';\r\nimport { Result } from '../core/result';\r\n\r\nexport class ReplyResult extends Result {\r\n  @ApiProperty()\r\n  count: number;\r\n  @ApiProperty()\r\n  limited: boolean;\r\n  @ApiProperty()\r\n  blocked: boolean;\r\n  @ApiProperty()\r\n  bounce: number;\r\n}\r\n","import { Result } from '../core';\r\n\r\nexport class ReportingResult extends Result {}\r\n","import { Result } from '../core';\r\n\r\nexport class SetupRuleResult extends Result {}\r\n","import { Task } from '../core';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { TaskEnum } from '../enums';\r\nimport { AddContactPayload } from '../payloads/add-contact.payload';\r\nexport class AddContactTask extends Task {\r\n    @ApiProperty({ type: TaskEnum.ADD_CONTACT, default: TaskEnum.ADD_CONTACT })\r\n    override action: TaskEnum.ADD_CONTACT = TaskEnum.ADD_CONTACT;\r\n    @ApiProperty()\r\n    override payload: AddContactPayload;\r\n}\r\n","import { Task } from '../core';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { AddRulePayload } from '../payloads';\r\nimport { TaskEnum } from '../enums';\r\nexport class AddRuleTask extends Task {\r\n  @ApiProperty({ type: TaskEnum.ADD_RULE, default: TaskEnum.ADD_RULE })\r\n  override action: TaskEnum.ADD_RULE = TaskEnum.ADD_RULE;\r\n  @ApiProperty()\r\n  override payload: AddRulePayload;\r\n}\r\n","import { Task } from '../core';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { AuthPayload } from '../payloads';\r\nimport { TaskEnum } from '../enums';\r\nexport class AuthTask extends Task {\r\n  @ApiProperty({\r\n    type: TaskEnum.AUTHENTICATION,\r\n    default: TaskEnum.AUTHENTICATION,\r\n  })\r\n  override action: TaskEnum.AUTHENTICATION = TaskEnum.AUTHENTICATION;\r\n  @ApiProperty()\r\n  override payload: AuthPayload;\r\n}\r\n","import { ApiProperty } from '@nestjs/swagger';\r\nimport { ChangeNamePayload } from '../payloads';\r\nimport { Task } from '../core';\r\nimport { TaskEnum } from '../enums';\r\nexport class ChangeNameTask extends Task {\r\n  @ApiProperty({ type: TaskEnum.CHANGE_NAME, default: TaskEnum.CHANGE_NAME })\r\n  override action: TaskEnum.CHANGE_NAME = TaskEnum.CHANGE_NAME;\r\n  @ApiProperty()\r\n  override payload: ChangeNamePayload;\r\n}\r\n","export * from './auth.task';\r\nexport * from './change-name.task';\r\nexport * from './reply.task';\r\nexport * from './remove-devices.task';\r\nexport * from './add-rule.task';\r\nexport * from './add-contact.task';\r\nexport * from './remove-contact.task'\r\n","import { Task } from '../core';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { TaskEnum } from '../enums';\r\nimport { RemoveContactPayload } from '../payloads/remove-contact.payload';\r\nexport class RemoveContactTask extends Task {\r\n    @ApiProperty({ type: TaskEnum.REMOVE_CONTACT, default: TaskEnum.REMOVE_CONTACT })\r\n    override action: TaskEnum.REMOVE_CONTACT = TaskEnum.REMOVE_CONTACT;\r\n    @ApiProperty()\r\n    override payload: RemoveContactPayload;\r\n}","import { Task } from '../core';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { RemoveDevicesPayload } from '../payloads';\r\nimport { TaskEnum } from '../enums';\r\nexport class RemoveDevicesTask extends Task {\r\n  @ApiProperty({\r\n    type: TaskEnum.REMOVE_DEVICES,\r\n    default: TaskEnum.REMOVE_DEVICES,\r\n  })\r\n  override action: TaskEnum.REMOVE_DEVICES = TaskEnum.REMOVE_DEVICES;\r\n  @ApiProperty()\r\n  override payload: RemoveDevicesPayload;\r\n}\r\n","import { Task } from '../core';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { ReplyPayload } from '../payloads';\r\nimport { TaskEnum } from '../enums';\r\nexport class ReplyTask extends Task {\r\n  @ApiProperty({ type: TaskEnum.REPLY, default: TaskEnum.REPLY })\r\n  override action: TaskEnum.REPLY = TaskEnum.REPLY;\r\n  @ApiProperty()\r\n  override payload: ReplyPayload;\r\n}\r\n","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/swagger\");","module.exports = require(\"@rmp135/imgur\");","module.exports = require(\"async-mutex\");","module.exports = require(\"bull\");","module.exports = require(\"class-validator\");","module.exports = require(\"dotenv\");","module.exports = require(\"express\");","module.exports = require(\"playwright-core\");","module.exports = require(\"redis\");","module.exports = require(\"tslib\");","module.exports = require(\"crypto\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","module.exports = require(\"util\");","module.exports = require(\"zlib\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","require('dotenv').config();\r\nrequire('./app/queue');\r\n"],"names":["myFirstQueue","Queue","redis","host","port","password","subscriber","createClient","duplicate","subscribe","concurrrency","process","env","CONCURRENCY","application","Application","gmail","Gmail","openBrowser","registerIsp","setApplicationId","job","done","progress","task","data","res","executeTask","on","channel","jobId","stopTasksByJobId","GmailAuthHandler","AuthHandler","handle","context","email","payload","result","page","pages","routingService","RoutingService","handlerService","HandlerService","signHandler","EmailHandler","EmailWrongHandler","PasswordHandler","PasswordWrongHandler","ChallengeHandler","ConfirmationEmailHandler","ConfirmationEmailWrongHandler","PhoneHandler","DisabledAccountHandler","EndHandler","ViewChipHandler","VerificationAccountHandler","TwoStepVerificationHandler","authService","AuthService","content","Authenticate","isFail","error","Error","token","getResult","Handler","name","HandlerEnum","CHALLENGE_HANDLER","locator","this","count","fail","available","nth","getAttribute","toString","click","success","waitFor","request","postData","includes","validate","waitForSelector","timeout","e","console","log","message","CONFIRMATION_EMAIL_WRONG_HANDLER","url","body","text","toLowerCase","toLocaleLowerCase","CONFIRMATION_EMAIL_HANDLER","type","confirmationEmail","DISABLED_ACCOUNT_HANDLER","EMAIL_WRONG_HANDLER","promisify","setTimeout","EMAIL_HANDLER","END","HANDLERS","PASSWORD_WRONG_HANDLER","PASSWORD_HANDLER","waitForTimeout","PHONE_HANDLER","value","headerValue","TWO_STEP_VERIFICATION_HANDLER","VERIFICATION_ACCOUNT_HANDLER","VIEWCHIP_HANDLER","constructor","goto","waitUntil","HANDLER_NAME_RESULT","waitForNextHandler","getHandlers","HANDLER_NAME","TIMEOUT","handler","getHandler","clickNext","AuthResult","deflated","deflateSync","JSON","stringify","storageState","handlers","Map","set","target","get","passedHandlers","response","waitForResponse","push","GmailChangeNameHandler","ChangeNameHandler","TaskEnum","CHANGE_NAME","waitForNavigation","waitForReady","oldName","getCurrentName","time","deleteOldAlias","timeEnd","addNewAlias","makeLastAsDefault","newName","locators","length","newpage","pop","inputName","clickCount","inputEmail","alias","createNewAliasEmail","username","split","join","domaine","chunks","i","numberOfPoints","randomIndex","Math","floor","random","splice","newusername","withPlus","extension","has","innerText","sleep","GmailRemoveDevicesHandler","RemoveDeviceHandler","REMOVE_DEVICES","ids","id","removeDevice","confirmlocator","FilterHandler","filter","GmailReplyHandler","ReplyHandler","messageIds","limited","blocked","bounce","messageService","MessageService","filterHandler","limit","messages","getMessages","elt","openMessage","openReplyBox","reset","resetReplyBox","SendMessage","date","evaluate","trs","document","querySelectorAll","tr","item","box","getBoundingClientRect","width","height","fromContainer","querySelector","subjectContainer","dateContainer","tooltipsContainer","classes","from","textContent","subject","dataThreadId","Date","parse","isRead","isStarred","isImportant","tooltipText","trim","Promise","resolve","hasNext","nextContainer","msg","innerHTML","keyboard","down","press","up","GmailSetupRuleHandler","SetupRuleHandler","addInboxRule","addIgnoreRule","AuthController","Controller","ChangeNameController","isps","browserManager","BrowserManager","results","tasks","responses","clientLock","Mutex","headless","isp","multipleContext","release","acquire","runningTask","Result","Response","controller","getController","action","createNewContext","session","createNewPage","then","tmp","execute","stoper","closeContext","undefined","applicationId","getApplicationId","stopTaskById","resolver","getResolver","getTasks","values","getTask","getTasksByTaskName","getResultByTaskId","getResultByJobId","find","getResponseByTaskId","getResponseByJobId","getTaskByJobId","stopTaskByJobId","imgur","Client","imgur2","buildSuccessResponse","taskId","emailId","buildFailResponse","image","screenshot","fullPage","imageInfo","Image","upload","title","description","link","registerHandler","startedAt","now","t","race","finishedAt","duration","Isp","h","ISP","prototype","AddContactHandler","ADD_CONTACT","AUTHENTICATION","RemoveContacttHandler","REMOVE_CONTACT","REPLY","SETUP_RULE","contexts","stopers","resolvers","browser","firefox","launch","args","options","locale","bypassCSP","colorScheme","acceptDownloads","permissions","reducedMotion","extraHTTPHeaders","s","inflateSync","Buffer","state","newContext","contextId","getContextId","createHash","update","digest","newPage","intialScript","readFileSync","__dirname","addInitScript","delete","close","closeBrowser","IspEnum","GMAIL","GMAIL_HANDLERS","ApiWithTokenResponse","applyDecorators","ApiOperation","operationOptions","ApiResponse","status","responseMetadata","TokenService","getJwt","headers","authorization","Injectable","scope","Scope","REQUEST","Inject","Request","SharedModule","Global","Module","controllers","providers","exports","shuffle","array","currentIndex","arr","Array","fill","reduce","a","b","either","ApiProperty","Email","IsEmail","IsNotEmpty","IsString","ApiPropertyOptional","Payload","enum","Task","TaskStatusEnum","AddContactConfigJob","AddContactPayload","AddContactResult","AddContactResponse","AddContactTask","AddRuleConfigJob","ADD_RULE","ChangeNamePayload","AddRuleResponse","AddRuleTask","AuthConfigJob","AuthPayload","AuthResponse","AuthTask","ChangeNameConfigJob","ChangeNameResult","ChangeNameResponse","ChangeNameTask","JOBS_CONFIG","RemoveDevicesConfigJob","ReplyConfigJob","SetupRuleConfigJob","RemoveContactConfigJob","RemoveContactPayload","RemoveContactResult","RemoveContactResponse","RemoveContactTask","RemoveDevicesResponse","RemoveDevicesTask","ReplyPayload","ReplyResult","ReplyResponse","ReplyTask","SetupRulePayload","SetupRuleResult","SetupRuleResponse","AddRulePayload","default","IsBoolean","Number","CreateProtonPayload","PAYLOADS","ReportingPayload","RemoveDevicesPayload","Placeholder","String","isArray","IsNumber","IsPositive","ReportingFilterPayload","setDate","getDate","ReportingInboxPyload","minimum","maximum","ReportingPromotionsPayload","ReportingPromotionsActions","ReportingPromitionsOthers","ReportingSpamPayload","ReportingSpamActions","ReportingSpamOthers","AddRuleRsult","PaginationResult","RemoveDevicesResult","ReportingResult","module","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}
